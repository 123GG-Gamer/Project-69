// ==UserScript==
// @version        Last Version 1.0
// @name           🔥⁅𝕴๖ۣۜℜ𝕄๏๔⁆⛔ (COMPLETE)
// @namespace      https://i.ibb.co/KVm8YMQ/image.png
// @match          *://moomoo.io/*
// @match          *://dev.moomoo.io/*
// @match          *://*sandbox.moomoo.io/*
// @icon           https://media0.giphy.com/media/GaqnjVbSLs2uA/giphy.gif?cid=ecf05e47ea99c7380f6deb1064d8804c8eaeec5c01af4d9d&rid=giphy.gif
// @description    Best mod for 2020. Better than TiGerMoD.
// @authors        Edited by Instakiller Squad and Scripted by Radar-Rain
// @require https://greasyfork.org/scripts/368273-msgpack/code/msgpack.js?version=598723
// @require http://code.jquery.com/jquery-3.3.1.min.js
// @require https://code.jquery.com/ui/1.12.0/jquery-ui.min.js
// @require https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js
// ==/UserScript==
var YouName = window.prompt("You name Instakiller Squad Radar or Code. Hmm nvm this hack got shared.","");
let message = document.createElement("img");
message.src = "https://wallpaperaccess.com/full/1120419.jpg"
message.style = `position: absolute; top: 50px; left: 300px; z-index: 100000; width: 130px; height: 90px; cursor: pointer;`;
document.body.prepend(message);
message.addEventListener("click", () => {
        if (Msgmodal.style.display = "none") {
            Msgmodal.style.display = "block";
        } else {
            Msgmodal.style.display = "none";}}
);
var settingsDiv = document.createElement('div');
var settingsSlider = document.createElement('input');
var itemTitle = document.createElement("h1");
var currentSpeed = document.createElement("h2");
var speedContain = document.createElement("div");
settingsSlider.type = "range";
settingsSlider.min = "12";
settingsSlider.max = "99";
settingsSlider.value = "50";
settingsSlider.id = "healSlider";
itemTitle.innerText = "Heal Speed";
currentSpeed.innerHTML = '<div id="cspeed">Heal Speed »</div> <div id="numfocus">50</div>';
currentSpeed.id = "currentSpeed";
speedContain.id = "speedContain";
itemTitle.id = "itemTitle";
itemTitle.style.color = "red";
settingsDiv.appendChild(settingsSlider);
speedContain.appendChild(currentSpeed);
document.querySelector("#setupCard").appendChild(itemTitle);
document.querySelector("#setupCard").appendChild(settingsDiv);
document.querySelector("#setupCard").appendChild(speedContain);
$("#healSlider").css({width: "100%", marginTop: 10});
$("#itemTitle").css({fontWeight: '100', fontSize: 25, width: "100%", textAlign: "center", fontFamily: "sans-serif"});
$("#healSlider").change((event, ui) => {
   let coreVal = parseInt($("#healSlider").val());
    autoHealSpeed = 150 - coreVal;
    currentSpeed.innerHTML = `<div id="cspeed">Speed »</div> <div id="numfocus">${coreVal}</div>`;
})

var styleItem = document.createElement("style");
styleItem.type = "text/css";
styleItem.appendChild(document.createTextNode(`

	#sback, #okbtn {
		font-family: sans-serif;
		font-weight: 300;
		border: none;
		outline: none;
		font-size: 15px;

	}

	#sback {

		border-radius: 5px;
		padding: 9px;
		cursor: pointer;
		margin-top: -1.5px;
		background-color: #d85858;
		color: white;


	}

	#okbtn {

		border-radius: 5px;
		padding: 9px;
		cursor: pointer;
		margin-top: -1.5px;
		background-color: #7399d6;
		color: white;

	}

	#flexlow {
		display: flex;
		justify-content: space-evenly;
		align-items: center;
		width: 100%;

	}

	#changeAlert {
		font-family: sans-serif;
		font-weight: 200;
		font-size: 23px;


	}

	#typealert {
		font-family: sans-serif;
		font-weight: 200;
		font-size: 17px;
		width: 95%;
		margin-left: 2.5%;
		text-align: center;
		margin-top: 5.5px;
	}

#hatChangeAlert {
    position: absolute;
    padding: 5px;
    top: -300px;
    opacity: 0;
    left: 20px;
    width: 300px;
    height: 165px;
    border-radius: 10px;
    background-color: rgba(255, 255, 255, 0.7);
    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.08), 0 2px 10px 0 rgba(0, 0, 0, 0.06);



}

#changeAlert {
 display: inline-block;

}

#hatimgmain {
 	width: 50px;
 	height: 50px;
 	display: inline-block;


}

#flextop {
	display: flex;
	width: 100%;
	justify-content: space-evenly;
	align-items: center;

}

#tbtn {
 position: absolute;
 left: 0;
 top: 0;
 width: 80px;
 height: 80px;
 opacity: 0;

}

.chosenhat {
  border: 1px solid #7daaf2;
}

.chosenwing {
  border: 1px solid #7daaf2;
}

.inalertHat {
     margin-left: 30px !important;
     margin-top: 10px !important;
}

.inalertWing {
     margin-left: 30px !important;
     margin-top: 10px !important;
}

option {
  border-radius: 0px;
}

#hrule {
  margin-top: 20px;
}

#endwrap {
 margin-top: 15px;
 width: 100%;
text-align: center;
margin-bottom: -15px;
}

#createEnd {
width: 100%;
text-align: center;
margin: 0 auto;

}

.lowprompt {
margin-bottom: -100px !important;

}


.lowpromptdetail {
margin-left: 25px;
color: #4c4c4c !important;
margin-top: 20px !important;
margin-bottom: 0 !important;

}

.toplow {
  margin-top: 10px !important;
}


.objplace {
   width: 45px;
   height: 45px;
   margin-bottom: -17px;
   border: 0.5px solid #f2f2f2;
   border-radius: 10px;
   margin-left: 5px;
   cursor: pointer;
}

.selPrev {
width: 80px;
height: 80px;
display: block;
margin: auto;
margin-top: 10px;

}

#choiceWrap {
display: flex;
justify-content: space-evenly;
align-items: center;


}

#middlePlus {
display: inline-block;
width: 50px;
height: 50px;
font-weight: 100;
font-family: sans-serif;
color: #4A4A4A;
opacity: 0.8;

}

.selectObj {
cursor: pointer;
 width: 100px;
height: 100px;
background-color: #fcfcfc;
display: inline-block;
border-radius: 10px;
 box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.08), 0 2px 10px 0 rgba(0, 0, 0, 0.06);

}


.selectObjAlert {
 cursor: pointer;
 width: 100px;
 height: 100px;
 background-color: #fcfcfc;
 display: inline-block;
 border-radius: 10px;
 box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.08), 0 2px 10px 0 rgba(0, 0, 0, 0.06);

}

#mnwrap {
  width: 100%;
text-align: center;
margin-bottom: -7px;
margin-top: 8px;
}

#flexControl {


}

#keyPress {
   margin-left: 20px;
   height: 20px;
   width: 50px;
   background-color: #e5e3e3;
   border-radius: 7.5px;
font-size: 16px;
border: none;
text-align: center;
color: #4A4A4A;

}

.keyPressLow {
margin-left: 8px;
font-size: 16px;
margin-right: 8px;
   height: 25px;
   width: 50px;
   background-color: #fcfcfc;
   border-radius: 3.5px;
border: none;
text-align: center;
color: #4A4A4A;
   border: 0.5px solid #f2f2f2;


}

#keyPress:focus {
border: none;
outline: none;
}

.keyPressLow:focus{

outline: none;
}

input[type=range] {
  -webkit-appearance: none;
  margin-top: 0px;
  width: 100%;
}
input[type=range]:focus {
  outline: none;
}
#healSlider::-webkit-slider-runnable-track {
  width: 100%;
  height: 10px;
  cursor: pointer;
  animate: 0.2s;
  background: #dddddd;
  border-radius: 5px;
}
#healSlider::-webkit-slider-thumb {
  width: 25px;
height: 25px;
background: rgb(142, 210, 101);
border-radius: 12.5px;
margin-top: -6.25px;
  -webkit-appearance: none;

}


#speedContain {
width: 80%;
height: 40px;
background-color: #75d679;
border-radius: 20px;
margin-left: 10%;
box-shadow: 1px 1px 4px gray;
}

#currentSpeed {
height: 40px;
width: 100%;
text-align: center;

color: white;
font-weight: 400 !important;
font-family: sans-serif;
font-size: 20px;
}

#numfocus {
  background-color: white;
color: #75d679;
border-radius: 20px;
margin-right: -24%;
padding: 10px;
display: inline-block;
font-size: 20px;
font-weight: 400;
font-family: sans-serif;

}

#cspeed {
      display: inline-block;
      height: 300px;
margin-top: 0px;
margin-left: -10px;
color: white;
font-weight: 400 !important;
font-family: sans-serif;
font-size: 20px;

}



.menuPrompt {
font-size: 18px;
font-family: 'Hammersmith One';
color: #4A4A4A;
flex: 0.2;
text-align: center;
margin-top: 10px;
display: inline-block;

}

#mainSettings {
   width: 400px;
   height: 375px;
overflow-y: scroll;

}

#settingsTitle {
font-size: 32px;
font-family: 'Hammersmith One';
color: #4A4A4A;
width: 100%;
text-align: center;
margin-top: 10px;

}

`))
document.head.appendChild(styleItem);
(function() {
  var UPDATE_DELAY = 700;

  var lastUpdate = 0;
  var frames = 0;

  var displayElement = document.createElement("div");
  displayElement.style.padding = "5px";
  displayElement.style.font = "16px Arial";
  displayElement.style.display = "block";
  displayElement.style.position = "fixed";
  displayElement.style.top = "0px";
  displayElement.style.left = "0px";
  displayElement.textContent = "Calculating...";
  document.body.appendChild(displayElement);

  function cssColorToRGB(color) {
    var values;

    if (color.startsWith("rgba")) {
      values = color.substring(5, color.length - 1).split(",");
    } else if (color.startsWith("rgb")) {
      values = color.substring(4, color.length - 1).split(",");
    } else if (color.startsWith("#") && color.length === 4) {
      values = [];
      values[0] = "" + parseInt("0x" + color.substr(1, 1));
      values[1] = "" + parseInt("0x" + color.substr(2, 1));
      values[2] = "" + parseInt("0x" + color.substr(3, 1));
    } else if (color.startsWith("#") && color.length === 7) {
      values = [];
      values[0] = "" + parseInt("0x" + color.substr(1, 2));
      values[1] = "" + parseInt("0x" + color.substr(3, 2));
      values[2] = "" + parseInt("0x" + color.substr(5, 2));
    } else {
      return {r : 255, g : 255, b : 255};
    }

    return {
      r : Number(values[0]),
      g : Number(values[1]),
      b : Number(values[2])
    };
  }

  function getInvertedRGB(values) {
    return "rgb(" + (255 - values.r) + "," + (9 - values.g) + ","
      + (9 - values.b) + ")";
  }

  function getOpaqueRGB(values) {
    return "rgba(" + values.r + "," + values.g + "," + values.b + ",0.7)";
  }

  function updateCounter() {
    var bgColor = getComputedStyle(document.body, null).getPropertyValue(
      "background-color");
    var bgColorValues = cssColorToRGB(bgColor);
    var textColor = getInvertedRGB(bgColorValues);
    var displayBg = getOpaqueRGB(bgColorValues);
    displayElement.style.color = textColor;
    displayElement.style.background = displayBg;

    var now = Date.now();
    var elapsed = now - lastUpdate;
    if (elapsed < UPDATE_DELAY) {
      ++frames;
    } else {
      var fps = Math.round(frames / (elapsed / 1000));
      displayElement.textContent = fps + " FPS";
      frames = 0;
      lastUpdate = now;
    }

    requestAnimationFrame(updateCounter);
  }

  lastUpdate = Date.now();
  requestAnimationFrame(updateCounter);
})();
const pingDisplay = $("#pingDisplay");
				pingDisplay.css("top", "10px");
				pingDisplay.css("display", "block");
var wtcrashoff=true
var ML;var IL;
var lite=false;
var Version = ""
if(lite==true){
ML = "";
IL = ''
}else{
ML = "";
IL = ''}
var FPS
(function() {
  var UPDATE_DELAY = 700;

  var lastUpdate = 0;
  var frames = 0;

  function updateCounter() {
    var now = Date.now();
    var elapsed = now - lastUpdate;
    if (elapsed < UPDATE_DELAY) {
      ++frames;
    } else {
      FPS = Math.round(frames / (elapsed / 1000));
      frames = 0;
      lastUpdate = now;
    }

    requestAnimationFrame(updateCounter);
  }

  lastUpdate = Date.now();
  requestAnimationFrame(updateCounter);
})();
$( "#errorNotification" ).after( '<div id="moddedMenu"><div class="titleMM">⁅𝕴๖ۣۜℜ𝕄๏๔⁆</div><div class="one"><label class="switch"></span></label><div class="two"><div class="text"><b>🔥⁅𝕴๖ۣۜℜ𝕄๏๔⁆⛔ By Instakiller Squad, Radar, and Code.<br></span></label><label class="container">R.E.P. CrossBow<input type="checkbox" id="REP"><span class="checkmark"></span></label><label class="container">AutoReload<input type="checkbox" id="MinecraftBetterMiniCraft"><span class="checkmark"></span></label><label class="containerx">Turret Helmet On Reload<input type="checkbox" id="THT"><span class="checkmarkx"></span></label><label class="container">Auto Bull<input type="checkbox" id="AB優若乳"><span class="checkmark"></span></label><label class="container">Auto Aim<input type="checkbox" id="aaa"><span class="checkmark"></span></label></label><label class="container">Q Heal<input type="checkbox" id="SH"><span class="checkmark"></span><label class="container">Insta Spike<input type="checkbox" id="ToggleSpike"><span class="checkmark"></span></label><label class="containerx">Spike x2<input type="checkbox" id="Spike2"><span class="checkmarkx"></span></label><label class="containerx">Spike x3<input type="checkbox" id="Spike3"><span class="checkmarkx"></span></label><label class="containerx">Big Map(middle click)<input type="text" id=BG"></span></label></div>');
setInterval(() => {
fpsdiv.innerHTML="FPS<br>"+FPS
}, 500);
let fpsdiv = document.createElement("div");
fpsdiv.id="test"
var ldinfo;var ahinfo;var bhinfo;var btinfo;var aainfo=no;var x;var y;var dir;var clan;var Hat;var ACC;var skull;var pn;
var yes='<span style="color:#68FF00;">Yes</span>';var no='<span style="color:#FF0000;">No</span>';var on='<span style="color:#68FF00;">ON</span>';var off='<span style="color:#FF0000;">OFF</span>';
setInterval(() => {
info.innerHTML='<span style="color:#00FFE4;">==INFO==</span><br><span style="color:#FFF700;">Leader:</span>'+ldinfo+'<span style="color:#9700FF;"> FPS:</span><span style="color:#00FFB6;">'+FPS+'</span><br><span style="color:#FF8300;">AutoHeal:</span><span style="color:#68FF00;">'+ahinfo+'</span><span style="color:#00B9FF;"> AutoHat:</span>'+bhinfo+'<br><span style="color:#2acba9;">BotMode:</span>'+btinfo+'<span style="color:#111073;"> AutoAim:</span>'+aainfo+'<br><span style="color:#16f1dd;">X:</span>'+x+' <span style="color:#26d289;">Y:</span>'+y+'<br><span style="color:#f9dbd9;">Dir:</span>'+dir+'<span style="color:#e6df4a;"> Clan:</span>'+clan+'<br><span style="color:#ff2610;">Hat:</span>'+Hat+'<span style="color:#e154fe;"> Accessorie:</span>'+ACC+'<br><span style="color:#f7f9ee;">Skull:</span>'+skull+'<span style="color:#dd730b;"> Player Near:</span>'+pn+'<img src="https://i.ibb.co/5YW2fh0/cooltext356310116484522.gif" width=240 height=78>'
if(isEnemyNear==true){
pn=yes
}else{pn=no}
Hat=myPlayer.hat
ACC=myPlayer.accessory
x='<span style="color:#FF0000;">'+myPlayer.x+'</span>'
y='<span style="color:#0032FF;">'+myPlayer.y+'</span>'
dir='<span style="color:#E400FF;">'+myPlayer.dir+'</span>'
if(myPlayer.isSkull==true){
skull=yes
}else{
skull=no
}
if(myPlayer.clan==null){
clan='<span style="color:#FF0000;">NoClan</span>'
}else{
clan='<span style="color:#2efe1f;">'+myPlayer.clan+'</span>'
}
if(myPlayer.isLeader==true){
ldinfo=yes
}else{
ldinfo=no
}
if(AutoHeal==true){
ahinfo=on
}else{
ahinfo=off
}
if(AutoHat==true){
bhinfo=on
}else{bhinfo=false}
if(BotToggle==1){
btinfo=on
}else{
btinfo=off
}
if(AutoAim==true){
aainfo=on
}else{
aainfo=off
}
}, 100);
let info = document.createElement("div");
info.id="info"
document.body.prepend(info);

copy()
function copy(){
$("#menuCardHolder").append(`<div class='menuCard' id='guideCard'><div class='menuHeader'>🔥⁅𝕴๖ۣۜℜ𝕄๏๔⁆⛔<div class='menuText'><label class="container"><input type="checkbox" id="EWDFAWFAW">`);
}
var autoreloadloop;
var autoreloadenough = 0;

autoreloadloop = setInterval(function () {
    if (autoreloadenough < 200) {
        if (document.getElementById("loadingText").innerHTML == `disconnected<a href="javascript:window.location.href=window.location.href" class="ytLink">reload</a>`) {
            document.title = "AutoReloader ON";
            clearInterval(autoreloadloop);
            setTimeout(function () {}, 1000)
            location.reload();
        }
        autoreloadenough++;
    }
    else if (autoreloadenough >= 300) {
        clearInterval(autoreloadloop);
        setTimeout(function () {}, 1000)
    }
}, 50);

selectSkinColor (3)

var sANC = 1;

var aNC = [255,255,1];

var rANC = [1,255];

var mk = document.getElementById("gameCanvas").getContext("2d");
var Laa = 0;
var Lab = 0;
var aVZ = 0;
var fBX = "<3 KatieW.";
var resForRANC = 1;

// 1920-1080



function rainbowColor(){
  if(resForRANC === 1){
    aNC = [255,0,0];
    resForRANC = 0;
  }
  if(aNC[0] === 255 && aNC[1] !== 255 && aNC[2] === 0){aNC[1] += 255/rANC[1];}
  if(aNC[0] !== 0 && aNC[1] === 255 && aNC[2] === 0){aNC[0] += 255/rANC[1]*-1;}
  if(aNC[0] === 0 && aNC[1] === 255 && aNC[2] !== 255){aNC[2] += 255/rANC[1];}
  if(aNC[0] === 0 && aNC[1] !== 0 && aNC[2] === 255){aNC[1] += 255/rANC[1]*-1;}
  if(aNC[0] !== 255 && aNC[1] === 0 && aNC[2] === 255){aNC[0] += 255/rANC[1];}
  if(aNC[0] === 255 && aNC[1] === 0 && aNC[2] !== 0){aNC[2] += 255/rANC[1]*-1;}
  if(aNC[0] < 0){aNC[0] = 0;} if(255 < aNC[0]){aNC[0] = 255;}
  if(aNC[1] < 0){aNC[1] = 0;} if(255 < aNC[1]){aNC[1] = 255;}
  if(aNC[2] < 0){aNC[2] = 0;} if(255 < aNC[2]){aNC[2] = 255;}
}

function katie(){
if(circle == true){
  if(document.getElementById("actionBarItem0")){
    if(document.getElementById("actionBarItem3").style.display === "inline-block"){
      if(fBX !== 3){
        aVZ = [[0,480],[0,360],[0,255]];
        if(sANC === 1){aNC = [255,0,0];}
        fBX = 3;
      }

      aVZ[0][0] += 1;
      if(aVZ[0][1] <= aVZ[0][0]){
        aVZ[0][0] = 0;
      }
      aVZ[1][0] += 1;
      if(aVZ[1][1] <= aVZ[1][0]){
        aVZ[1][0] = 0;
      }
      aVZ[2][0] += 1;
      if(aVZ[2][1] <= aVZ[2][0]){
        aVZ[2][0] = 0;
      }

      mk.beginPath();
      mk.lineWidth = 24;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.625)";
      mk.arc(960,540,212,0+Math.PI/(aVZ[0][1]/2)*aVZ[0][0],7/8*Math.PI+Math.PI/(aVZ[0][1]/2)*aVZ[0][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 30;
      mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*220)+","+Math.round(aNC[1]/255*220)+","+Math.round(aNC[2]/255*220)+",0.625)";
      mk.arc(960,540,185,0+Math.PI/(aVZ[1][1]/2)*aVZ[1][0],2/3*Math.PI+Math.PI/(aVZ[1][1]/2)*aVZ[1][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 45;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.5)";
      mk.arc(960,540,85,0+Math.PI/(aVZ[2][1]/2)*aVZ[2][0],1/3*Math.PI+Math.PI/(aVZ[2][1]/2)*aVZ[2][0]);
      mk.stroke();
    }
          if(document.getElementById("actionBarItem2").style.display === "inline-block"){
      if(fBX !== 3){
        aVZ = [[0,480],[0,360],[0,255]];
        if(sANC === 1){aNC = [255,0,0];}
        fBX = 3;
      }

      aVZ[0][0] += 1;
      if(aVZ[0][1] <= aVZ[0][0]){
        aVZ[0][0] = 0;
      }
      aVZ[1][0] += 1;
      if(aVZ[1][1] <= aVZ[1][0]){
        aVZ[1][0] = 0;
      }
      aVZ[2][0] += 1;
      if(aVZ[2][1] <= aVZ[2][0]){
        aVZ[2][0] = 0;
      }

      mk.beginPath();
      mk.lineWidth = 24;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.625)";
      mk.arc(960,540,212,0+Math.PI/(aVZ[0][1]/2)*aVZ[0][0],7/8*Math.PI+Math.PI/(aVZ[0][1]/2)*aVZ[0][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 30;
      mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*220)+","+Math.round(aNC[1]/255*220)+","+Math.round(aNC[2]/255*220)+",0.625)";
      mk.arc(960,540,185,0+Math.PI/(aVZ[1][1]/2)*aVZ[1][0],2/3*Math.PI+Math.PI/(aVZ[1][1]/2)*aVZ[1][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 45;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.5)";
      mk.arc(960,540,85,0+Math.PI/(aVZ[2][1]/2)*aVZ[2][0],1/3*Math.PI+Math.PI/(aVZ[2][1]/2)*aVZ[2][0]);
      mk.stroke();
    }
    if(document.getElementById("actionBarItem4").style.display === "inline-block"){
      if(fBX !== 4){
        aVZ = [[0,360],[0,250],[0,225],[0,250]];
        if(sANC === 1){aNC = [255,0,0];}
        fBX = 4;
      }

      aVZ[0][0] += -1;
      if(aVZ[0][1] <= aVZ[0][0]){
        aVZ[0][0] = 0;
      }
      aVZ[1][0] += 1;
      if(aVZ[1][1] <= aVZ[1][0]){
        aVZ[1][0] = 0;
      }
      aVZ[2][0] += -1;
      if(aVZ[2][1] <= aVZ[2][0]){
        aVZ[2][0] = 0;
      }
      aVZ[3][0] += 1;
      if(aVZ[3][1] <= aVZ[3][0]){
        aVZ[3][0] = 0;
      }

      mk.beginPath();
      mk.lineWidth = 36;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.45)";
      mk.arc(960,540,251,0+Math.PI/(aVZ[0][1]/2)*aVZ[0][0],15/16*Math.PI+Math.PI/(aVZ[0][1]/2)*aVZ[0][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 46;
      mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*220)+","+Math.round(aNC[1]/255*220)+","+Math.round(aNC[2]/255*220)+",0.45)";
      mk.arc(960,540,210,0+Math.PI/(aVZ[1][1]/2)*aVZ[1][0],7/9*Math.PI+Math.PI/(aVZ[1][1]/2)*aVZ[1][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 32;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.383)";
      mk.arc(960,540,109,0+Math.PI/(aVZ[2][1]/2)*aVZ[2][0],2/3*Math.PI+Math.PI/(aVZ[2][1]/2)*aVZ[2][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 26;
      mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*235)+","+Math.round(aNC[1]/255*235)+","+Math.round(aNC[2]/255*235)+",0.383)";
      mk.arc(960,540,80,0+Math.PI/(aVZ[3][1]/2)*aVZ[3][0],7/8*Math.PI+Math.PI/(aVZ[3][1]/2)*aVZ[3][0]);
      mk.stroke();
    }
        if(document.getElementById("actionBarItem2").style.display === "inline-block"){
      if(fBX !== 3){
        aVZ = [[0,480],[0,360],[0,255]];
        if(sANC === 1){aNC = [255,0,0];}
        fBX = 3;
      }

      aVZ[0][0] += 1;
      if(aVZ[0][1] <= aVZ[0][0]){
        aVZ[0][0] = 0;
      }
      aVZ[1][0] += 1;
      if(aVZ[1][1] <= aVZ[1][0]){
        aVZ[1][0] = 0;
      }
      aVZ[2][0] += 1;
      if(aVZ[2][1] <= aVZ[2][0]){
        aVZ[2][0] = 0;
      }

      mk.beginPath();
      mk.lineWidth = 24;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.625)";
      mk.arc(960,540,212,0+Math.PI/(aVZ[0][1]/2)*aVZ[0][0],7/8*Math.PI+Math.PI/(aVZ[0][1]/2)*aVZ[0][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 30;
      mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*220)+","+Math.round(aNC[1]/255*220)+","+Math.round(aNC[2]/255*220)+",0.625)";
      mk.arc(960,540,185,0+Math.PI/(aVZ[1][1]/2)*aVZ[1][0],2/3*Math.PI+Math.PI/(aVZ[1][1]/2)*aVZ[1][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 45;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.5)";
      mk.arc(960,540,85,0+Math.PI/(aVZ[2][1]/2)*aVZ[2][0],1/3*Math.PI+Math.PI/(aVZ[2][1]/2)*aVZ[2][0]);
      mk.stroke();
    }
          if(document.getElementById("actionBarItem4").style.display === "inline-block"){
      if(fBX !== 4){
        aVZ = [[0,360],[0,250],[0,225],[0,250]];
        if(sANC === 1){aNC = [255,0,0];}
        fBX = 4;
      }

      aVZ[0][0] += -1;
      if(aVZ[0][1] <= aVZ[0][0]){
        aVZ[0][0] = 0;
      }
      aVZ[1][0] += 1;
      if(aVZ[1][1] <= aVZ[1][0]){
        aVZ[1][0] = 0;
      }
      aVZ[2][0] += -1;
      if(aVZ[2][1] <= aVZ[2][0]){
        aVZ[2][0] = 0;
      }
      aVZ[3][0] += 1;
      if(aVZ[3][1] <= aVZ[3][0]){
        aVZ[3][0] = 0;
      }

      mk.beginPath();
      mk.lineWidth = 36;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.45)";
      mk.arc(960,540,251,0+Math.PI/(aVZ[0][1]/2)*aVZ[0][0],15/16*Math.PI+Math.PI/(aVZ[0][1]/2)*aVZ[0][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 46;
      mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*220)+","+Math.round(aNC[1]/255*220)+","+Math.round(aNC[2]/255*220)+",0.45)";
      mk.arc(960,540,210,0+Math.PI/(aVZ[1][1]/2)*aVZ[1][0],7/9*Math.PI+Math.PI/(aVZ[1][1]/2)*aVZ[1][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 32;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.383)";
      mk.arc(960,540,109,0+Math.PI/(aVZ[2][1]/2)*aVZ[2][0],2/3*Math.PI+Math.PI/(aVZ[2][1]/2)*aVZ[2][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 26;
      mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*235)+","+Math.round(aNC[1]/255*235)+","+Math.round(aNC[2]/255*235)+",0.383)";
      mk.arc(960,540,80,0+Math.PI/(aVZ[3][1]/2)*aVZ[3][0],7/8*Math.PI+Math.PI/(aVZ[3][1]/2)*aVZ[3][0]);
      mk.stroke();
    }
        if(document.getElementById("actionBarItem8").style.display === "inline-block"){
      if(fBX !== 3){
        aVZ = [[0,480],[0,360],[0,255]];
        if(sANC === 1){aNC = [255,0,0];}
        fBX = 3;
      }

      aVZ[0][0] += 1;
      if(aVZ[0][1] <= aVZ[0][0]){
        aVZ[0][0] = 0;
      }
      aVZ[1][0] += 1;
      if(aVZ[1][1] <= aVZ[1][0]){
        aVZ[1][0] = 0;
      }
      aVZ[2][0] += 1;
      if(aVZ[2][1] <= aVZ[2][0]){
        aVZ[2][0] = 0;
      }

      mk.beginPath();
      mk.lineWidth = 24;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.625)";
      mk.arc(960,540,212,0+Math.PI/(aVZ[0][1]/2)*aVZ[0][0],7/8*Math.PI+Math.PI/(aVZ[0][1]/2)*aVZ[0][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 30;
      mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*220)+","+Math.round(aNC[1]/255*220)+","+Math.round(aNC[2]/255*220)+",0.625)";
      mk.arc(960,540,185,0+Math.PI/(aVZ[1][1]/2)*aVZ[1][0],2/3*Math.PI+Math.PI/(aVZ[1][1]/2)*aVZ[1][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 45;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.5)";
      mk.arc(960,540,85,0+Math.PI/(aVZ[2][1]/2)*aVZ[2][0],1/3*Math.PI+Math.PI/(aVZ[2][1]/2)*aVZ[2][0]);
      mk.stroke();
    }
    if(document.getElementById("actionBarItem7").style.display === "inline-block"){
      if(fBX !== 4){
        aVZ = [[0,360],[0,250],[0,225],[0,250]];
        if(sANC === 1){aNC = [255,0,0];}
        fBX = 4;
      }

      aVZ[0][0] += -1;
      if(aVZ[0][1] <= aVZ[0][0]){
        aVZ[0][0] = 0;
      }
      aVZ[1][0] += 1;
      if(aVZ[1][1] <= aVZ[1][0]){
        aVZ[1][0] = 0;
      }
      aVZ[2][0] += -1;
      if(aVZ[2][1] <= aVZ[2][0]){
        aVZ[2][0] = 0;
      }
      aVZ[3][0] += 1;
      if(aVZ[3][1] <= aVZ[3][0]){
        aVZ[3][0] = 0;
      }

      mk.beginPath();
      mk.lineWidth = 36;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.45)";
      mk.arc(960,540,251,0+Math.PI/(aVZ[0][1]/2)*aVZ[0][0],15/16*Math.PI+Math.PI/(aVZ[0][1]/2)*aVZ[0][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 46;
      mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*220)+","+Math.round(aNC[1]/255*220)+","+Math.round(aNC[2]/255*220)+",0.45)";
      mk.arc(960,540,210,0+Math.PI/(aVZ[1][1]/2)*aVZ[1][0],7/9*Math.PI+Math.PI/(aVZ[1][1]/2)*aVZ[1][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 32;
      mk.strokeStyle = "rgb("+Math.round(aNC[0])+","+Math.round(aNC[1])+","+Math.round(aNC[2])+",0.383)";
      mk.arc(960,540,109,0+Math.PI/(aVZ[2][1]/2)*aVZ[2][0],2/3*Math.PI+Math.PI/(aVZ[2][1]/2)*aVZ[2][0]);
      mk.stroke();
      mk.beginPath();
      mk.lineWidth = 26;
      mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*235)+","+Math.round(aNC[1]/255*235)+","+Math.round(aNC[2]/255*235)+",0.383)";
      mk.arc(960,540,80,0+Math.PI/(aVZ[3][1]/2)*aVZ[3][0],7/8*Math.PI+Math.PI/(aVZ[3][1]/2)*aVZ[3][0]);
      mk.stroke();
    }
    if(document.getElementById("actionBarItem5").style.display === "inline-block"){
      if(fBX !== 5){
        aVZ = [[0,250,2.5,10,1.2]];
        if(sANC === 1){aNC = [255,0,255];}
        fBX = 5;
      }

      aVZ[0][0] += 1;
      if(aVZ[0][1] <= aVZ[0][0]){
        aVZ[0][0] = 0;
      }

      for(Laa = 0; Laa < Math.round(aVZ[0][1]/5*2); Laa++){
        mk.beginPath();
        mk.lineWidth = 26;
        mk.strokeStyle = "rgb("+Math.round(aNC[0]/255*235)+","+Math.round(aNC[1]/255*235)+","+Math.round(aNC[2]/255*235)+",0.5)";
        mk.arc(960,540,200+Math.sin(aVZ[0][3]*Math.PI/(aVZ[0][1]/aVZ[0][2])*(Laa-aVZ[0][0]))*aVZ[0][3]*aVZ[0][4],0-2*Math.PI/aVZ[0][1]*Laa+2*Math.PI/aVZ[0][1]*aVZ[0][0],2*Math.PI/aVZ[0][1]-2*Math.PI/aVZ[0][1]*Laa+2*Math.PI/aVZ[0][1]*aVZ[0][0]);
        mk.stroke();
      }
    }
  }
}
}

function letThereBeLight(){
  if(rANC[0] === 1){
    rainbowColor();
  }
  katie();
  window.requestAnimationFrame(letThereBeLight);
}

window.requestAnimationFrame(letThereBeLight);
    $("#youtuberOf").html(`<div id="youtuberOf">
    ´
<div class="spanLink" id="featuredYoutube"><a target="_blank" class="ytLink" href="https://www.youtube.com/channel/UCNGEdq2mT2P7QfoZ0oapnQg">Instakiller Squad</a></div></div>
Featured Hacker:`)
document.getElementById('enterGame').innerHTML = 'Enter';

document.getElementById('loadingText').innerHTML = '.......................Load 🔥⁅𝕴๖ۣۜℜ𝕄๏๔⁆⛔.......................';
document.getElementById('nameInput').placeholder = "The Name Here";

document.getElementById('chatBox').placeholder = "Message";


document.getElementById('diedText').style.color = "Red";
document.getElementById('diedText').innerHTML = 'F*CK THIS SH*T';

document.getElementById("storeHolder").style = "height: 1500px; width: 450px;"

document.getElementById("leaderboard").style.color = "red";
document.getElementById('adCard').remove();
document.getElementById("gameName").style.color = "red";
document.getElementById("setupCard").style.color = "pink";
document.getElementById("gameName").innerHTML = "🔥⁅𝕴๖ۣۜℜ𝕄๏๔⁆⛔"
$('#info').css({
    'font-size': '15px',
    'position': 'absolute',
    'width': '240px',
    'height': '230px',
    'background': 'url("")',
    'top': '560px',
    'left': '1680px'});

$('#leaderboard').append('⁅𝕴๖ۣۜℜ𝕄๏๔⁆');

(function() {var css = [
	"div#adCard, ",
	"  #twitterFollow, ",
	"  #youtubeFollow, ",
	"  #downloadButtonContainer, ",
	"  #followText, ",
	"  #promoImg {",
	"    display: none;",
	"  }",
	"",
	"  #featuredYoutube > a.ytLink, ",
	"  a {",
	"    color: #ff0000 !important;",
	"    font-size: 20px;",
	"    margin-top: 0px;",
	"    transition: 0.5s;",
	"  }",
	"",
	"  a:hover {",
	"    color: #cc0000 !important;",
	"  }",
	"",
	"  #youtuberOf, ",
	"  #linksContainer2, ",
	"  .partyWrap {",
	"    background: rgba(0,0,0,0.6);",
	"    border: 3px solid rgba(0,0,0,0.9);",
	"    border-radius: 10px;",
	"    padding: 10px;",
	"    font-size: 20px;",
	"    position: absolute;",
	"    color: #fff;",
	"  }",
	"",
	"  .partyWrap {",
	"    min-height: 80px;",
	"    min-width: 160px;",
	"    top: 10px;",
	"    right: 10px;",
	"  }",
	"",
	"  #youtuberOf {",
	"    top: 10px;",
	"    left: 10px;",
	"  }",
	"",
	"  #followText {",
	"    min-height: 200px;",
	"    bottom: 10px;",
	"    left: 10px;",
	"  }",
	"",
	"  #linksContainer2 {",
	"    bottom: 10px;",
	"    right: 10px;",
	"    color: transparent;",
	"  }",
	"",
	"  .menuCard {",
	"    background: rgba(0,0,0,0.6);",
	"    border-radius: 10px;",
	"    border: 10px solid rgba(0,0,0,0.9);",
	"    box-shadow: none;",
	"    overflow:auto;",
	"  }",
	"",
	"  ::-webkit-scrollbar {",
	"    width: 10px;",
	"    border-right: 2px solid #ff0000;",
	"  }",
	"",
	"  ::-webkit-scrollbar-thumb {",
	"    border: 2px solid #ff0000;",
	"  }",
	"",
	"  ::-webkit-scrollbar-thumb:hover {",
	"    background: #ff0000;",
	"  }",
	"",
	"  ::-webkit-scrollbar-thumb:active {",
	"    background: black;",
	"    border: 2px solid #ff0000;",
	"  }",
	"",
	"  .menuHeader {",
	"    font-size: 24px;",
	"    color: #eeeeee;",
	"    margin-bottom: 3px;",
	"    border-bottom: 3px solid #eee;",
	"  }",
	"",
	"  .menuHeader:first-child {",
	"    margin-bottom: 30px;",
	"  }",
	"",
	"  .menuText {",
	"    font-size: 18px;",
	"    color: #ccc;",
	"    margin-bottom: 10px;",
	"  }",
	"",
	"  .ytLink {",
	"    color: #ff0000;",
	"    font-size: 24px;",
	"    text-decoration: none;",
	"    transition: 0.5s;",
	"  }",
	"",
	"  .menuButton {",
	"    color: #fff;",
	"    background-color: transparent;",
	"    border: 5px solid #ff0000;",
	"    position: relative;",
	"    display: inline-flex;",
	"    padding: 0px 70px;",
	"    font-family: denk one;",
	"    transition: color .5s;",
	"    overflow: hidden;",
	"    width: 100%;",
	"    justify-content: center;",
	"  }",
	"",
	"  .menuButton:hover {",
	"    color: #FFFFFF !important;",
	"    border: 5px solid #ff0000;",
	"    cursor: pointer;",
	"    background-color: transparent;",
	"  }",
	"",
	"  .menuButton:before {",
	"    content: \'\';",
	"    position: absolute;",
	"    top: 0;",
	"    left: 0;",
	"    width: 130%; ",
	"    height: 10000%;",
	"    background: #ff0000;",
	"    border-right: 20px solid #b6fe9c;",
	"    z-index: -1;",
	"    transform-origin:0 0 ;",
	"    transform:translateX(-112%) skewX(45deg);",
	"    transition: transform .5s;",
	"  }",
	"",
	"  .menuButton:hover:before {",
	"    color: #FFFFFF !important;",
	"    transform: translateX(-20%) skewX(45deg);",
	"  }",
	"",
	"  .menuCard span {",
	"    margin: 10px;",
	"  }",
	"",
	"  #promoHolderImg > img {",
	"    width: 300px;",
	"    height: 94px;",
	"  }",
	"",
	"  #guideCard {",
	"    max-height: 282px;",
	"  }",
	"",
	"  .skinColorItem {",
	"    transition: 1s;",
	"    border: 3px solid #000;",
	"  }",
	"",
	"  select {",
	"    background: #cc0000;",
	"    border-radius: 5px;",
	"    border: 3px solid #ff0000;",
	"    margin-bottom: 10px;",
	"    color: #fff;",
	"    transition: 0.5s;",
	"  }",
	"",
	"  select:hover {",
	"    background: #ff0000;",
	"    border: 3px solid #cc0000;",
	"  }",
	"",
	"  #pre-content-container {",
	"    display: none!important;",
	"  }",
	"",
	"  .uiElement, ",
	"  .resourceDisplay, ",
	"  .actionBarItem {",
	"    background-color: rgba(0,0,0,0.6) !important;",
	"    border: 3px solid rgba(0,0,0,0.9);",
	"    border-radius: 50px !important;",
	"    color: #ff0000;",
	"    transition: 0.5s;",
	"  }",
	"",
	"  .uiElement:hover, ",
	"  .resourceDisplay:hover, ",
	"  .actionBarItem:hover {",
	"    background-color: rgba(0,0,0,0.5) !important;",
	"    border: 3px solid rgba(0,0,0,0.9);",
	"    border-radius: 50px !important;",
	"    color: #ff0000;",
	"  }",
	"",
	"  #topInfoHolder, #itemInfoHolder, #mapDisplay, #chatBox  { ",
	"    background-color: rgba(0,0,0,0.6) !important;",
	"    border: 3px solid rgba(0,0,0,0.9);",
	"    border-radius: 10px !important;",
	"    color: #ff0000;",
	"  }",
	"",
	"  #itemInfoHolder { ",
	"    -webkit-text-stroke: transparent;",
	"  }",
	"",
	"  .material-icons { ",
	"    color: #ff0000;",
	"    font-size: 31px;",
	"    -webkit-text-stroke: 1.5px #fff;",
	"  }",
	"",
	"  #altServer > a > i {",
	"    font-size: 30px !important;",
	"    -webkit-text-stroke: transparent !important;",
	"  }",
	"",
	"  #ageBarBody {",
	"    background-color: #ff0000;",
	"    border: 3px solid #fff",
	"  }",
	"",
	"  #ageBar {",
	"    background-color: rgba(0,0,0,0.6) !important;",
	"    border: 3px solid rgba(0,0,0,0.9);",
	"    height: 10px;",
	"    padding-bottom: 10px;",
	"    margin-bottom: 20px;",
	"  }",
	"",
	"  .actionBarItem {",
	"    width: 65px;",
	"    height: 65px;",
	"    background-position: center; ",
	"    background-size: 55px 55px;",
	"  }",
	"",
	"  #aBox {",
	"    color: #ff0000!important;",
	"    transition: 0.5s;",
	"  }",
	"",
	"  #chatBox::placeholder {",
	"    color: #ff0000!important;",
	"  }",
	"",
	"  #chatBox:hover {",
	"    background: rgba(0,0,0,0.5)!important;",
	"  }",
	"",
	"  #chatBox:hover::placeholder {",
	"    color: #fc9f9f!important;",
	"  }",
	"",
	"  #leaderboard, .leaderboardItem[style*=\"color: rgb(255, 255, 255);\"] {",
	"    color: #ff0000!important;",
	"  }",
	"",
	"  .ytLink:hover {",
	"    color: #cc0000;",
	"  }",
	"",
	"  #nameInput {",
	"    background: #fff;",
	"    border: 5px solid #ff0000;",
	"    transition: 0.5s;",
	"  }",
	"",
	"  #nameInput::placeholder {",
	"    color: #ff0000;",
	"    transition: 0.5s;",
	"  }",
	"",
	"  #nameInput:hover {",
	"    background: #ff0000;",
	"    color: #fff;",
	"  }",
	"",
	"  #nameInput:hover::placeholder {",
	"    background: #ff0000;",
	"    color: #fff;",
	"  }",
	"",
	"  #linksContainer2 {",
	"    max-height: 500px;",
	"    width: 250px;",
	"  }",
	"",
	"  #linksContainer2 > * {",
	"    display:table-cell;",
	"    vertical-align:middle;",
	"    text-align: center;",
	"    width:700px;",
	"  }",
	"  ",
	"  .storeTab, ",
	"  #storeHolder, ",
	"  #allianceHolder, ",
	"  #allianceInput, ",
	"  .allianceButtonM {",
	"    background: rgba(0,0,0,0.6);",
	"    border: 3px solid rgba(0,0,0,0.9);",
	"  }",
	"",
	"  .storeItem, ",
	"  .storeTab, ",
	"  .allianceButtonM, ",
	"  #allianceInput::placeholder, ",
	"  .allianceItem {",
	"    color: #ff0000 !important;",
	"  }",
	"",
	"  .storeItem, ",
	"  .storeTab, ",
	"  .allianceButtonM, ",
	"  #allianceInput::placeholder, ",
	"  .allianceItem, ",
	"  .joinAlBtn {",
	"    color: #ff0000 !important;",
	"  }",
	"",
	"  .storeItem:hover, ",
	"  .storeTab:hover, ",
	"  .allianceButtonM:hover,",
	"  .allianceItem:hover, ",
	"  .joinAlBtn:hover {",
	"    color: #fc9f9f !important;",
	"  }",
	"",
	"  #allianceInput, ",
	"  #killCounter {",
	"    color: #ff0000;",
	"  }",
	"  ",
	"  #allianceInput:hover {",
	"    background: rgba(0,0,0,0.5);",
	"    color: #fc9f9f;",
	"  }",
	"",
	"  #allianceInput:hover::placeholder{",
	"    color: #fc9f9f;",
	"  }",
	"",
	"  #linksContainer2 > *:first-child {",
	"    border-bottom: 3px solid #ff0000;",
	"  }",
	"",
	"  #moddedMenu {",
	"    position: absolute;",
	"    top: 3.25%;",
	"    left: 0px;",
	"    width: 3%;",
	"    height: 60%;",
	"    background: rgba(0,0,0,0.6);",
	"    border: 3px solid rgba(0,0,0,0.9);",
	"    border-top-right-radius: 30px;",
	"    border-bottom-right-radius: 30px;",
	"    transition: 1s;",
	"    z-index: 999;",
	"  }",
	"",
	"  #moddedMenu:hover {",
	"    width: 20%;",
	"  }",
	"",
	"  #youtuberOf {",
	"    bottom: 10px;",
	"    top: auto;",
	"  }",
	"",
	"  .titleMM {",
	"    color: #ff0000;",
	"    border-bottom: 3px solid #ff0000;",
	"    font-size: 32px;",
	"    transform: rotate(90deg);",
	"    white-space: nowrap;",
	"    margin-top: 160%;",
	"    transition: 1s;",
	"  }",
	"",
	"  #moddedMenu:hover > .titleMM {",
	"    transform: rotate(0deg) translate(0,-1580%)",
	"  }",
	"",
	"  .switch {",
	"    margin-top: 5px;",
	"    margin-left: 10px;",
	"    position: absolute;",
	"    width: 60px;",
	"    height: 34px;",
	"    transition: opacity 1s;",
	"    opacity: 0;",
	"  }",
	"",
	"  .text {",
	"    bottom: 76%;",
	"    position: absolute;",
	"    color: #eee;",
	"    font-size: 20px;",
	"    left: 0%;",
	"    display: none;",
	"    transition: 1s;",
	"  }",
	"",
	"  .text > b { ",
	"    font-size: 20px;",
	"    color: #ff0000;",
	"  }",
	"",
	"  b:hover { ",
	"    color: #fc9f9f;",
	"  }",
	"",
	"  .one > .text {",
	"    top: 5.5%;",
	"  }",
	"",
	"  .two > .text {",
	"    top: 10.7%;",
	"  }",
	"",
	"  .three > .text {",
	"    top: 37.5%;",
	"  }",
	"",
	"  .four > .text {",
	"    top: 47.5%;",
	"  }",
	"",
	"  .five > .text {",
	"    top: 57.5%;",
	"  }",
	"",
	"  .six > .text {",
	"    top: 67.5%;",
	"  }",
	"",
	"  .seven > .text {",
	"    top: 77.5%;",
	"  }",
	"",
	"  .eight > .text {",
	"    top: 87.5%;",
	"  }",
	"",
	"  #moddedMenu:hover .switch {",
	"    opacity: 1;",
	"  }",
	"",
	"  #moddedMenu:hover .text {",
	"    display: block;",
	"  }",
	"",
	"  .one > .switch {",
	"    top: 15%;",
	"  }",
	"",
	"  .two > .switch {",
	"    top: 25%;",
	"  }",
	"",
	"  .three > .switch {",
	"    top: 35%;",
	"  }",
	"",
	"  .four > .switch {",
	"    top: 45%;",
	"  }",
	"",
	"  .five > .switch {",
	"    top: 55%;",
	"  }",
	"",
	"  .six > .switch {",
	"    top: 65%;",
	"  }",
	"",
	"  .seven > .switch {",
	"    top: 75%;",
	"  }",
	"",
	"  .eight > .switch {",
	"    top: 85%;",
	"  }",
	"",
	"  .switch input {",
	"    display:none;",
	"  }",
	"",
	"  .slider {",
	"    position: absolute;",
	"    cursor: pointer;",
	"    top: 0;",
	"    left: 0;",
	"    right: 0;",
	"    bottom: 0;",
	"    background-color: #888;",
	"    -webkit-transition: .4s;",
	"    transition: .4s;",
	"  }",
	"",
	"  .slider:before {",
	"    position: absolute;",
	"    content: \"\";",
	"    height: 26px;",
	"    width: 26px;",
	"    left: 4px;",
	"    bottom: 4px;",
	"    background-color: white;",
	"    -webkit-transition: .4s;",
	"    transition: .4s;",
	"  }",
	"",
	"  input:checked + .slider {",
	"    background-color: #ff0000;",
	"  }",
	"  ",
	"  input:focus + .slider {",
	"    box-shadow: 0 0 1px #ff0000;",
	"  }",
	"",
	"  input:checked + .slider:before {",
	"    -webkit-transform: translateX(26px);",
	"    -ms-transform: translateX(26px);",
	"    transform: translateX(26px);",
	"  }",
	"",
	"  .slider.round {",
	"    border-radius: 34px;",
	"  }",
	"",
	"  .slider.round:before {",
	"    border-radius: 50%;",
	"  }"
].join("\n");
if (typeof GM_addStyle != "undefined") {
	GM_addStyle(css);
} else if (typeof PRO_addStyle != "undefined") {
	PRO_addStyle(css);
} else if (typeof addStyle != "undefined") {
	addStyle(css);
} else {
	var node = document.createElement("style");
	node.type = "text/css";
	node.appendChild(document.createTextNode(css));
	var heads = document.getElementsByTagName("head");
	if (heads.length > 0) {
		heads[0].appendChild(node);
	} else {
		// no head yet, stick it whereever
		document.documentElement.appendChild(node);
	}
}
})();

window.onbeforeunload = null;
//Version Toggle Here
let mouseX;
let mouseY;

let width;
let height;
setInterval(() => {
   if(CrashToggle == 1) {
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
       doNewSend(["9", [null]]);
       doNewSend(["8", [animate(false, 5)]])
   }
    doNewSend(["testing", [6]]);
}, 0);
var A=true;
if(wtcrashoff==true){
setInterval(() => {
   if(clanToggle == 1) {
setTimeout(() => {
        doNewSend(["9", [null]]);
        doNewSend(["8", ['-IRMOD-']])
setTimeout(() => {
        doNewSend(["9", [null]]);
        doNewSend(["8", ['IS']])
setTimeout(() => {
        doNewSend(["9", [null]]);
        doNewSend(["8", ['THE']])
setTimeout(() => {
        doNewSend(["9", [null]]);
        doNewSend(["8", ['BEST']])
setTimeout(() => {
        doNewSend(["9", [null]]);
        doNewSend(["8", ['HACK']])
}, 100);
}, 100);
}, 100);
}, 100);
}, 100);
   }
    doNewSend(["testing", [6]]);
}, 500);
}else{
setInterval(() => {
   if(clanToggle == 1 && A==true) {
        doNewSend(["9", [null]]);
        doNewSend(["8", [animate(false, 5)]])
   }
    doNewSend(["testing", [6]]);
}, 50);
setInterval(() => {
   if(clanToggle == 1 && A==false) {
        doNewSend(["9", [null]]);
        doNewSend(["8", [animate(false, 5)]])
   }
    doNewSend(["testing", [6]]);
}, 200);}
setInterval(() => {
    if(messageToggle == 1) {
        doNewSend(["ch", [animate(true, 5)]])
    }
}, 200);
var botSpan = document.createElement("span");
botSpan.innerHTML=""
botSpan.id="ezgetrekt"
            var ageDiv = document.getElementById("ageText");
             ageDiv.prepend(botSpan);
setInterval(() => {
    if(BotToggle == 1) {
botSpan.innerHTML="BOT "
$('#ageText').css({'color': 'black'});
$('#ezgetrekt').css({'color': 'red'});
        ageDiv.prepend(botSpan);
        storeEquip(28);
        doNewSend(["6", [3]]);
        doNewSend(["6", [17]]);
        doNewSend(["6", [31]]);
        doNewSend(["6", [23]]);
        doNewSend(["6", [9]]);
        doNewSend(["6", [33]]);
        doNewSend(["6", [4]]);
        doNewSend(["6", [15]]);
        doNewSend(["10", ["BOT"]]);
        doNewSend(["ch", ["-IRMOD- BOT MODE"]]);
        doNewSend(["33", [nearestEnemyAngle]]);
        setTimeout( () => {
            doNewSend(["ch", ['KILL ME=YOU GAY']]);
        }, 5000);}else{
$('#ageText').css({'color': 'black'});
botSpan.innerHTML=""
        }
}, 1);

setInterval(() => {
    if(AutoAim == true) {
        doNewSend(["2", [nearestEnemyAngle]]);
    }
}, 0);

setInterval(() => {
    if(hatToggle == 1) {
        if(oldHat != normalHat) {
            hat(normalHat);
            console.log("[INFO]Tried - Hat")
        }
        if(oldAcc != normalAcc) {
            acc(normalAcc);
            console.log("[INFO]Tried - Acc")
        }
        oldHat = normalHat;
        oldAcc = normalAcc
    }
}, 25);

function normal() {
    hat(normalHat);
    acc(normalAcc);
}

function aim(x, y){
     var cvs = document.getElementById("gameCanvas");
     cvs.dispatchEvent(new MouseEvent("mousemove", {
         clientX: x,
         clientY: y

     }));
}

let coreURL = new URL(window.location.href);
window.sessionStorage.force = coreURL.searchParams.get("fc");

var CORESTATE = {
		inwater: {active: false},
		nearenemy: {active: false},
		intrap: {active: false},
		ipress: {active: false},
};
var bautoaim=true;
var custombp=false;
var tcat=false;
var sp="Spike";
var IM1T=false;var IM2T=false;var IM3T=false;var IM4T=false;var IM5T=false;var IM6T=false;var IM7T=false;var IM8T=false;var IM9T=false;var IM10T=false;
var IM1="BOOM ONE SHOT";var IM2="GOT A BOT";var IM3="GG NOOB";var IM4="EZ";var IM5="Yeah~|R I P|~OmG";var IM6="";var IM7="";var IM8="";var IM9="";var IM10="";
var circle = false;
var SuperHeal = false;
var R1 = "";var R2 = "";var R3 = "";var R4 = "";
var M0 = "";var M1 = "";var M2 = "";var M3 = "";var M4 = "";var M5 = "";var M6 = "";var M7 = "";var M8 = "";var M9 = "";
var zMsg = false;
var RMsg = false;
var zM0;var zM1;var zM2;var zM3;var zM4;var zM5;var zM6;var zM7;var zM8;var zM9;
var Spikex2 = false;
var Spike2x = false;
var ToggleCrash = false;
var BSChat = false;
var BSChatX = false;
var BSMsg = "Like BoostSpikes?";
var nearestEnemy;
var nearestEnemyAngle;
var isEnemyNear;
var InstaSpeed = 230;
var primary;
var CustomDiscord = false;
var CustomAnimateChat = false;
var CustomAnimateClan = false;
var Discord = ""
var AnimateChat = 'Run Or Die Noob'
var AnimateClan = '-IRMOD-'
var InstaMessage = "Lol Why Try Noob? Lol"
var CustomInstaChat = false;
var xInstaChatx = false;
var InstaSpike = false;
var PremiumMap = false;
var AutoHeal = true;
var AutoHat = true;
var secondary;
var foodType;
var wallType;
var spikeType;
var tbi=true;
var BIT="Meow eZ Meow";
var lt="Spike"
var rt="Spike"
var millType;
var mineType;
var boostType;
var turretType;
var spawnpadType;
var aba=true
var AutoAim = false;
var FourSpikeMsgX = false;
var FourSpikeMsgToggle = false;
var FourSpikeMsg = "Like Spikes?"
var Tick = 1;
var oldHat;
var oldAcc;
var R99 = "-IRMOD-";
var enemiesNear;
var normalHat;
var add = "_";
var normalAcc;
var ws;
var cursor=1;
var msgpack5 = msgpack;
var boostDir;
let myPlayer = {
    id: null,
    x: null,
    y: null,
    dir: null,
    object: null,
    weapon: null,
    clan: null,
    isLeader: null,
    hat: null,
    accessory: null,
    isSkull: null
};

var MYID;
var allTraps = [];
var allMooMooObjects = {};
let healSpeed = 50;
var messageToggle = 0;
var MapToggle = 0;
var clanToggle = 0;
var CrashToggle = 0;
var BotToggle = 0;
let healToggle = 1;
let hatToggle = 1;

document.msgpack = msgpack;
function n(){
     this.buffer = new Uint8Array([0]);
     this.buffer.__proto__ = new Uint8Array;
     this.type = 0;
}

WebSocket.prototype.oldSend = WebSocket.prototype.send;
WebSocket.prototype.send = function(m){
    if (!ws){
        document.ws = this;

        ws = this;
        socketFound(this);
    }
    this.oldSend(m);
};


function socketFound(socket){
    socket.addEventListener('message', function(message){
        handleMessage(message);
    });
}

function handleMessage(m){
    let temp = msgpack5.decode(new Uint8Array(m.data));
    let data;
    if(temp.length > 1) {
        data = [temp[0], ...temp[1]];
        if (data[1] instanceof Array){
            data = data;
        }
    } else {
      data = temp;
    }
    let item = data[0];
    if(!data) {return};

    if(item === "io-init") {
            let cvs = document.getElementById("gameCanvas");
            width = cvs.clientWidth;
            height = cvs.clientHeight;
            $(window).resize(function() {
                width = cvs.clientWidth;
                height = cvs.clientHeight;
            });
            cvs.addEventListener("mousemove", e => {
                mouseX = e.clientX;
                mouseY = e.clientY;
            });
        }

    if (item == "1" && myPlayer.id == null){
        myPlayer.id = data[1];
    }
    if(data[0] == "11"){
        console.info("doing death");
        for (var elem of Object.values(allMooMooObjects)){
           console.info(elem);
          elem.style.opacity = 0;
        }
    }
    if (data[0]=="12"){

        let newTraps = [];
        for (let trap of allTraps){
            if (trap[trap.length-2] != data[1]) newTraps.push(trap);
        }
        allTraps = newTraps;


       if (Object.keys(allMooMooObjects).includes(data[1].toString())){
            allMooMooObjects[data[1]].remove();
      }
			if (CORESTATE.intrap.active){
				if (CORESTATE.intrap.extra == data[1]){
						CORESTATE.intrap.active = false;
					let newTraps = [];
					for (let trap of allTraps){
						if (trap[trap.length-2] != data[1]) newTraps.push(trap);
					}
					allTraps = newTraps;
				}
			}
    }
    if (data[0] == "1" && !MYID){
        MYID =  data[1];
    }
    if (data[0]=="6"){
        var locInfo = data[1];
        if (locInfo[locInfo.length-1].toString() == MYID){ //Object created
        if (window.innerWidth >= 770){
            console.log(locInfo);
            var itemID = `actionBarItem${locInfo[locInfo.length-2]+16}`;
            var imgURL = document.getElementById(itemID).style.backgroundImage.toString().match(/url\("(.+)?(?=")/)[1];
            console.info(imgURL);
            let mapDisplay = document.getElementById("mapDisplay").getBoundingClientRect();
            let mapSize = [14365, 14365];
            let boxSize = [$("#mapDisplay").width(), $("#mapDisplay").height()];
            let targets = [locInfo[1], locInfo[2]].map(item => (130*item)/14365);
            let x = mapDisplay.x + targets[0] - 6;
            let y = mapDisplay.y + targets[1] - 6;
            let newTarget = document.createElement("div");
            newTarget.rawX = targets[0];
            newTarget.rawY = targets[1];
            newTarget.rimgURL = imgURL;
            newTarget.style = `background-image: url("${imgURL}"); background-size: 12px 12px; width:12px; height:12px; position:absolute; left: ${x}px; top:${y}px; opacity:0; z-index:100; cursor: pointer;`;
            newTarget.className = "mapTarget";
            document.getElementsByTagName("body")[0].appendChild(newTarget);
            $(newTarget).animate({opacity: 1});
            allMooMooObjects[locInfo[0]] = newTarget;

        }
    } else {
			console.log(locInfo);
			for (var i=0;i<locInfo.length/8;i+=1){
		    let arr = locInfo.slice(i*8, (i+1)*8); console.log(arr)
				let objtype = arr[arr.length-2];
				if (objtype == 15){
					allTraps.push(arr);
				}

		}


		}
    }

    if (item == "33") {
        enemiesNear = [];
        for(let i = 0; i < data[1].length / 13; i++) {
            let playerInfo = data[1].slice(13*i, 13*i+13);
            if(playerInfo[0] == myPlayer.id) {
                myPlayer.x = playerInfo[1];
                myPlayer.y = playerInfo[2];
                myPlayer.dir = playerInfo[3];
                myPlayer.object = playerInfo[4];
                myPlayer.weapon = playerInfo[5];
                myPlayer.clan = playerInfo[7];
                myPlayer.isLeader = playerInfo[8];
                myPlayer.hat = playerInfo[9];
                myPlayer.accessory = playerInfo[10];
                myPlayer.isSkull = playerInfo[11];
            } else if(playerInfo[7] != myPlayer.clan || playerInfo[7] === null) {
                enemiesNear.push(playerInfo);
            }
        }
    }

    isEnemyNear = false;
    if(enemiesNear) {
        nearestEnemy = enemiesNear.sort((a,b) => dist(a, myPlayer) - dist(b, myPlayer))[0];
    }
    if(nearestEnemy) {
        nearestEnemyAngle = Math.atan2(nearestEnemy[2]-myPlayer.y, nearestEnemy[1]-myPlayer.x);
        if(Math.sqrt(Math.pow((myPlayer.y-nearestEnemy[2]), 2) + Math.pow((myPlayer.x-nearestEnemy[1]), 2)) < 300) {
            isEnemyNear = true;
            if(AutoAim == false && myPlayer.hat != 7 && myPlayer.hat != 53) {
                normalHat = 6;
                if(primary != 8) {
                    normalAcc = 21;
                }
            };
        }
    }
    if(isEnemyNear == false && AutoAim == false) {
        normalAcc = 11;
        if (myPlayer.y < 2400){
            normalHat = 15;
        } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
            normalHat = 31;
        } else {
	        normalHat = 12;
        }
    }
    if (!nearestEnemy) {
        nearestEnemyAngle = myPlayer.dir;
    }
        if(healToggle == 1 && SuperHeal == true) {
            setTimeout( () => {
                placeF(foodType, null);
                placeF(foodType, null);
                placeF(foodType, null);
                placeF(foodType, null);
            }, 0);
    }
    if(item == "h" && data[1] == myPlayer.id) {
        if(data[2] < 100 && data[2] > 0 && healToggle == 1) {
            setTimeout( () => {
                placeF(foodType, null);
            }, healSpeed);

        }
    }
    update();
}

function doNewSend(sender){
    ws.send(new Uint8Array(Array.from(msgpack5.encode(sender))));
}

function acc(id) {
    doNewSend(["13c", [0, 0, 1]]);
    doNewSend(["13c", [0, id, 1]]);
}

function hat(id) {
    doNewSend(["13c", [0, id, 0]]);
}
function placeF(id, angle = Math.atan2(mouseY - height / 2, mouseX - width / 2)) {
    doNewSend(["5", [id, null]]);
    doNewSend(["c", [1, angle]]);
    doNewSend(["c", [0, angle]]);
    doNewSend(["5", [id, null]]);
    doNewSend(["c", [1, angle]]);
    doNewSend(["c", [0, angle]]);
    doNewSend(["5", [myPlayer.weapon, true]]);
}

function place(id, angle = Math.atan2(mouseY - height / 2, mouseX - width / 2)) {
    doNewSend(["5", [id, null]]);
    doNewSend(["c", [1, angle]]);
    doNewSend(["c", [0, angle]]);
    doNewSend(["5", [myPlayer.weapon, true]]);
}

function boostSpike() {
    if(BSChat == true)
    {
        if(BSChatX == true)
        {
            doNewSend(["ch", [BSMsg]]);
        }
        else
        {
            doNewSend(["ch", ["Like BoostSpikes?"]]);
        }
    }
if(bautoaim==true){
        boostDir = nearestEnemyAngle;
}else
{
boostDir = myPlayer.dir
}
    if(custombp==true){
        if(lt=="Spike"){
            place(spikeType, boostDir + toRad(90));}
        if(lt=="Windmill"){
            place(millType, boostDir + toRad(90));}
        if(lt=="Turret"){
            place(turretType, boostDir + toRad(90));
        }
        if(lt=="Wall"){
            place(wallType, boostDir + toRad(90));
        }
        if(rt=="Spike"){
            place(spikeType, boostDir - toRad(90));}
        if(rt=="Windmill"){
            place(millType, boostDir - toRad(90));}
        if(rt=="Turret"){
            place(turretType, boostDir - toRad(90));
        }
        if(rt=="Wall"){
            place(wallType, boostDir - toRad(90));
        }
    }
    else
    {
        place(spikeType, boostDir - toRad(90));
        place(spikeType, boostDir + toRad(90));
    }
    place(boostType, boostDir);
    doNewSend(["33", [boostDir]]);
}
var repeater = function(key, action, interval) {
    let _isKeyDown = false;
    let _intervalId = undefined;

    return {
        start(keycode) {
            if(keycode == key && document.activeElement.id.toLowerCase() !== 'chatbox') {
                _isKeyDown = true;
                if(_intervalId === undefined) {
                    _intervalId = setInterval(() => {
                        action();
                        if(!_isKeyDown){
                            clearInterval(_intervalId);
                            _intervalId = undefined;
                            console.log("[INFO]Claered");
                        }
                    }, interval);
                }
            }
        },

        stop(keycode) {
            if(keycode == key && document.activeElement.id.toLowerCase() !== 'chatbox') {
                _isKeyDown = false;
            }
        }
    };
}
setInterval(() => {
if(aba==true){
if(isEnemyNear==true){
AutoAim=true
}else{
AutoAim=false
}
}}, 1);

const healer = repeater(81, () => {place(foodType)}, 0);
const boostPlacer = repeater(70, () => {place(boostType)}, 0);
const spikePlacer = repeater(86, () => {place(spikeType)}, 0);
const millPlacer = repeater(78, () => {place(millType)}, 0);
const turretPlacer = repeater(72, () => {place(turretType)}, 0);
const boostSpiker = repeater(71, boostSpike, 0);

function getRandom(min,max){
    return Math.floor(Math.random()*max)+min;
};
var wtf=false;
var ezz;
document.addEventListener("mousedown", buttonPress, false);
function buttonPress(e) {
    if(e.button==0)
    {
        if(wtf==true){
            hat(ID_BullHelmet)
            acc(0)
                doNewSend(["5", [primary, true]]);
            setTimeout( () => {
            hat(0)
            if (myPlayer.y < 2400){
                hat(15);
            } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
                hat(31);
            } else {
                hat(12);
            }
            acc(11);
            }, 100);
        }
    }
    if(e.button==1)
    {
        if(PremiumMap==true){
            $("#mapDisplay").css({background: `url('https://media0.giphy.com/media/GaqnjVbSLs2uA/giphy.gif?cid=ecf05e47ea99c7380f6deb1064d8804c8eaeec5c01af4d9d&rid=giphy.gif')`});
        }
        $("#mapDisplay").css({width:"390"});
        $("#mapDisplay").css({height:"390"});
    }
    if(e.button==2)
    {
        doNewSend(["5", [secondary, true]]);
        setTimeout( () => {
        doNewSend(["5", [primary, true]]);
        }, 100);
    }
}

document.addEventListener("mouseup", test, false);
function test(e) {
clearInterval(ezz);
        setTimeout( () => {
            if(PremiumMap==true){
                $("#mapDisplay").css({background: `url('https://media0.giphy.com/media/GaqnjVbSLs2uA/giphy.gif?cid=ecf05e47ea99c7380f6deb1064d8804c8eaeec5c01af4d9d&rid=giphy.gif')`});
            }
            $("#mapDisplay").css({width:"130"});
            $("#mapDisplay").css({height:"130"});
        }, 1);
}
setInterval(() => {
    if (noItem==false) {
        for (var elem of Object.values(allMooMooObjects)){
           console.info(elem);
          elem.style.opacity = 0;
        }
    }
}, 1);
document.addEventListener('keydown', (e)=>{
    spikePlacer.start(e.keyCode);
    healer.start(e.keyCode);
    boostPlacer.start(e.keyCode);
    boostSpiker.start(e.keyCode);
    millPlacer.start(e.keyCode);
    turretPlacer.start(e.keyCode);
    //MsgBox
    if (e.keyCode == 96 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(zMsg == true)
        {
            doNewSend(["ch", [M0]]);
        }
    }
    if (e.keyCode == 97 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(zMsg == true)
        {
            doNewSend(["ch", [M1]]);
        }
    }
    if (e.keyCode == 98 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(zMsg == true)
        {
            doNewSend(["ch", [M2]]);
        }
    }
    if (e.keyCode == 99 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(zMsg == true)
        {
            doNewSend(["ch", [M3]]);
        }
    }
    if (e.keyCode == 100 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(zMsg == true)
        {
            doNewSend(["ch", [M4]]);
        }
    }
    if (e.keyCode == 101 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(zMsg == true)
        {
            doNewSend(["ch", [M5]]);
        }
    }
    if (e.keyCode == 102 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(zMsg == true)
        {
            doNewSend(["ch", [M6]]);
        }
    }
    if (e.keyCode == 103 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(zMsg == true)
        {
            doNewSend(["ch", [M7]]);
        }
    }
    if (e.keyCode == 104 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(zMsg == true)
        {
            doNewSend(["ch", [M8]]);
        }
    }
    if (e.keyCode == 105 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(zMsg == true)
        {
            doNewSend(["ch", [M9]]);
        }
    }
    if (e.keyCode == xxxxwall && document.activeElement.id.toLowerCase() !== 'chatbox') {
        for (let i=0;i<4;i++){
             let angle = myPlayer.dir + toRad(i * 90);
             place(wallType, angle)
        }
    }
    if (e.keyCode == xxxxtarp && document.activeElement.id.toLowerCase() !== 'chatbox') {
        for (let i=0;i<4;i++){
             let angle = myPlayer.dir + toRad(i * 90);
             place(boostType, angle)
        }
    }
    if (e.keyCode == xxxxspi && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(FourSpikeMsgX == true)
        {
        if(FourSpikeMsgToggle == true)
        {
        doNewSend(["ch", [FourSpikeMsg]]);
        }
        else
        {
        doNewSend(["ch", ["Like Spikes?"]]);
        }
        }
            for (let i=0;i<4;i++){
             let angle = myPlayer.dir + toRad(i * 90);
             place(spikeType, angle)
        }
    }
    if (e.keyCode == xxxxxw && document.activeElement.id.toLowerCase() !== 'chatbox') {
        for (let i=0;i<4;i++){
             let angle = myPlayer.dir + toRad(i * 72);
             place(millType, angle)
        }
    }
    if (e.keyCode == xxxxTurretk && document.activeElement.id.toLowerCase() !== 'chatbox') {
        for (let i=0;i<5;i++){
             let angle = myPlayer.dir + toRad(i * 90);
             place(turretType, angle)
        }
    }
    if (e.keyCode == 72 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        place(turretType, myPlayer.dir + toRad(45));
        place(turretType, myPlayer.dir - toRad(45));
    }
    if (e.keyCode == best && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if (myPlayer.y < 2400){
            hat(15);
        } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
            hat(31);
        } else {
	        hat(12);
        }
        acc(11);
    }
    if(e.keyCode == 38 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        messageToggle = (messageToggle + 1) % 2;
    }

    if(e.keyCode == 40 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        clanToggle = (clanToggle + 1) % 2;
    }
//Crash Server
    if(e.keyCode == crash && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if(wtcrashoff==true){
            if(InstaSpeed==230){
                doNewSend(["ch", ["Insta Speed- "+InstaSpeed]]);
                InstaSpeed=190
            }else{
                doNewSend(["ch", ["Insta Speed- "+InstaSpeed]]);
                InstaSpeed=230
            }
        }else{
            if(ToggleCrash == true)
            {
                CrashToggle = (CrashToggle + 1) % 2;
                if(CrashToggle == 0) {
                    document.title = "Crash: OFF"
                } else {
                    document.title = "Crash: ON"
                }
            }
            else
            {
                doNewSend(["ch", ["Crash Is Off"]]);
            }
        }
    }

//Bot Toggle
    if(e.keyCode == bt && document.activeElement.id.toLowerCase() !== 'chatbox') {
        BotToggle = (BotToggle + 1) % 2;
            if(BotToggle == 0) {
                document.title = "Bot: OFF"
            } else {
                document.title = "Bot: ON"
            }
    }

    if(e.keyCode == tauh && document.activeElement.id.toLowerCase() !== 'chatbox') {
        healToggle = (healToggle + 1) % 2;
        if(healToggle == 0) {
            if(hatToggle == 0) {
                document.title = "Heal: OFF / Hat: OFF"
            } else {
                document.title = "Heal: OFF / Hat: ON"
            }
        } else {
            if(hatToggle == 0) {
                document.title = "Heal: ON / Hat: OFF"
            } else {
                document.title = "Heal: ON / Hat: ON"
            }
        }
    }
    if(e.keyCode == discord && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["ch", [Discord]]);
    }
    if(e.keyCode == tauh && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if (AutoHeal == false) {
            AutoHeal = true;
        doNewSend(["ch", ["Auto Heal-ON"]]);
        } else {
        doNewSend(["ch", ["Auto Heal-OFF"]]);
            AutoHeal = false;
    }
}
    if(e.keyCode == cteam && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["9", [null]]);
        doNewSend(["8", ['-IRMOD-']])
    }
    if(e.keyCode == dcteam && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["9", [null]]);
        doNewSend(["8", ['']])
    }
    if(e.keyCode == 37 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["ch", [""]]);
    }
    if(e.keyCode == 39 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["ch", [""]]);
    }
    if(e.keyCode == 32 && document.activeElement.id.toLowerCase() !== 'chatbox') {
       doNewSend(["ch", [""]]);
    }
    if(e.keyCode == ktnmus && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["6", [4]]);
        doNewSend(["6", [15]]);
        doNewSend(["6", [4]]);
        doNewSend(["6", [15]]);
        doNewSend(["6", [4]]);
        doNewSend(["6", [15]]);
    }
    if(e.keyCode == gramus && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["6", [2]]);
        doNewSend(["6", [15]]);
        doNewSend(["6", [2]]);
        doNewSend(["6", [15]]);
        doNewSend(["6", [2]]);
        doNewSend(["6", [15]]);
    }
    if(e.keyCode == ktn && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["6", [4]]);
    }

    if(e.keyCode == mk1 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["6", [15]]);
    }
    if(e.keyCode == spinspi && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["6", [28]]);
        doNewSend(["6", [25]]);
    }
    if(e.keyCode == gr && document.activeElement.id.toLowerCase() !== 'chatbox') {
        doNewSend(["6", [2]]);
    }
    if(e.keyCode == musket2 && document.activeElement.id.toLowerCase() !== 'chatbox') {
if(rc==true){
        doNewSend(["6", [13]]);
}else{
        doNewSend(["6", [12]]);
    }
    }
    if(e.keyCode == auhat && document.activeElement.id.toLowerCase() !== 'chatbox') {
        hatToggle = (hatToggle + 1) % 2;
        if(healToggle == 0) {
            if(hatToggle == 0) {
                document.title = "Heal: OFF / Hat: OFF"
            } else {
                document.title = "Heal: OFF / Hat: ON"
            }
        } else {
            if(hatToggle == 0) {
                document.title = "Heal: ON / Hat: OFF"
            } else {
                document.title = "Heal: ON / Hat: ON"
            }
        }
    }
    if(e.keyCode == auhat && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if (AutoHat == false) {
            AutoHat = true;
        doNewSend(["ch", ["Auto Hat-ON"]]);
        } else {
        doNewSend(["ch", ["Auto Hat-OFF"]]);
            AutoHat = false;
    }
}
    let RandomMsg=(getRandom(1,10)).toString();
    function InstaChat(){
        switch(RandomMsg){
            case '1':
                if(IM1T==true){
                    doNewSend(["ch", [IM1]]);}else{doNewSend(["ch", ["BOOM ONE SHOT"]]);}
                break;

            case '2':
                if(IM2T==true){
                    doNewSend(["ch", [IM2]]);
                }else{doNewSend(["ch", [""]]);}
                break;

            case '3':
                if(IM3T==true){
                    doNewSend(["ch", [IM3]]);
                }else{doNewSend(["ch", ["GG NOOB"]]);}
                break;

            case '4':
                if(IM4T==true){
                    doNewSend(["ch", [IM4]]);
                }else{doNewSend(["ch", ["EZ"]]);}
                break;

            case '5':
                if(IM5T==true){
                    doNewSend(["ch", [IM5]]);
                }else{doNewSend(["ch", ["Yeah~|R I P|~OmG"]]);}
                break;

            case '6':
                if(IM6T==true && InstaSpike==true)
                {
                        doNewSend(["ch", [sp+" "+IM6]]);
                }
                if(IM6T==false && InstaSpike==false)
                {
                        doNewSend(["ch", ["PRO INSTA"]]);
                }
                if(IM6T==false && InstaSpike==true)
                {
                        doNewSend(["ch", [sp+"PRO INSTA"]]);
                }
                break;

            case '7':
                if(IM7T==true){
                    doNewSend(["ch", [IM7]]);}else{
                        doNewSend(["ch", ["BOOM ONE SHOT"]]);}
                break;

            case '8':
                if(IM8T==true){
                    doNewSend(["ch", [IM8]]);}
                else{
                    doNewSend(["ch", ["EzzE~1~EzzE"]]);
                }
                break;

            case '9':
                if(IM9T==true){
                    doNewSend(["ch", [IM9]]);}
                else{
                    doNewSend(["ch", ["-IRMOD- IS BEST"]]);
                }
                break;

            case '10':
                if(IM9T==true){
                    doNewSend(["ch", [IM10]]);}
                else{
                    doNewSend(["ch", ["EZ NAB"]]);
                }
                break;

            default:
                doNewSend(["ch", ["BOOM ONE SHOT"]]);

        }};
var audio = new Audio(IL);
    if(e.keyCode == XD1 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        audio.play();
        if(tbi == true)
        {
            if(customi == true)
            {
                doNewSend(["ch", [BIT]]);
            }else{
                doNewSend(["ch", ["Meow eZ Meow"]]);
            }
        }
        AutoAim=true
        doNewSend(["5", [secondary, true]]);
        doNewSend(["c", [1]]);
        setTimeout( () => {
            doNewSend(["6", [12]]);
            doNewSend(["5", [secondary, true]]);
            doNewSend(["c", [1]]);
            setTimeout( () => {
                doNewSend(["6", [15]]);
                doNewSend(["5", [secondary, true]]);
                doNewSend(["c", [1]]);
                setTimeout( () => {
                    hat(ID_TurretGear)
                    setTimeout( () => {
                        doNewSend(["5", [primary, true]]);
                        setTimeout( () => {
                            hat(0)
                            if (myPlayer.y < 2400){
                                hat(15);
                            } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
                                hat(31);
                            } else {
                                hat(12);
                            }
                            acc(11);
                        }, 100);
                    }, 80);
                }, 80);
            }, 80);
        }, 80);
        AutoAim=false
    }
    if(e.keyCode == XD2 && document.activeElement.id.toLowerCase() !== 'chatbox') {
audio.play();
if(xInstaChatx == true)
{
    if(CustomInstaChat == true)
{
        doNewSend(["ch", [InstaMessage]]);
}
    else
{
InstaChat();
}
}
AutoAim=true
hat(ID_BullHelmet)
acc(0)
        doNewSend(["c", [1]]);
        setTimeout( () => {
        doNewSend(["6", [5]]);
        doNewSend(["c", [1]]);
            hat(ID_TurretGear)
        setTimeout( () => {
            hat(0)
            if (myPlayer.y < 2400){
                hat(15);
            } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
                hat(31);
            } else {
                hat(12);
            }
            acc(11);
            }, 100);
        }, 80);
        if (InstaSpike == true) {
            if(Spike2x == true){
                for (let i=0;i<3;i++){
                    let angle = myPlayer.dir + toRad(i * 90);
                    place(spikeType, angle)
                }}
            else
            {
                if(Spikex2 == true)
                {
                    place(spikeType, myPlayer.dir + toRad(45));
                    place(spikeType, myPlayer.dir - toRad(45));
                }
                else
                {
                    place(spikeType);
                }
            }
        }
AutoAim=false
    }
    if(e.keyCode == XDD && document.activeElement.id.toLowerCase() !== 'chatbox') {
audio.play();
AutoAim=true
hat(ID_BullHelmet)
acc(0)
        doNewSend(["c", [1]]);
        setTimeout( () => {
        doNewSend(["6", [4]]);
        doNewSend(["c", [1]]);
            hat(ID_TurretGear)
        setTimeout( () => {
            hat(0)
            if (myPlayer.y < 2400){
                hat(15);
            } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
                hat(31);
            } else {
                hat(12);
            }
            acc(11);
            }, 100);
        }, 80);
        if (InstaSpike == true) {
            if(Spike2x == true){
                for (let i=0;i<3;i++){
                    let angle = myPlayer.dir + toRad(i * 90);
                    place(spikeType, angle)
                }}
            else
            {
                if(Spikex2 == true)
                {
                    place(spikeType, myPlayer.dir + toRad(45));
                    place(spikeType, myPlayer.dir - toRad(45));
                }
                else
                {
                    place(spikeType);
                }
            }
        }
AutoAim=false
    }
    if(e.keyCode == InstaKill && document.activeElement.id.toLowerCase() !== 'chatbox') {
audio.play();
if(xInstaChatx == true)
{
    if(CustomInstaChat == true)
{
        doNewSend(["ch", [InstaMessage]]);
}
    else
{
InstaChat();
}
}
        AutoAim = true;
        doNewSend(["5", [primary, true]]);
        doNewSend(["13c", [0, 7, 0]]);
        doNewSend(["13c", [0, 0, 1]]);
        doNewSend(["13c", [0, 18, 1]]);
        doNewSend(["c", [1]]);

        setTimeout( () => {
            doNewSend(["13c", [0, 6, 0]]);
            doNewSend(["13c", [0, 0, 0]]);
            doNewSend(["13c", [0, 6, 0]]);
            doNewSend(["13c", [0, 53, 0]]);
            doNewSend(["13c", [0, 21, 1]]);
            doNewSend(["5", [secondary, true]]);
        }, InstaSpeed - 100);

        setTimeout( () => {
            doNewSend(["5", [primary, true]]);
            doNewSend(["c", [0, null]]);
            doNewSend(["13c", [0, 0, 0]]);
            doNewSend(["13c", [0, 6, 0]]);
            doNewSend(["13c", [0, 52, 0]]);
            doNewSend(["13c", [0, 21, 1]]);
            doNewSend(["13c", [0, 13, 1]]);
            doNewSend(["13c", [0, 11, 0]]);
            doNewSend(["13c", [0, 21, 1]]);
            doNewSend(["13c", [0, 19, 1]]);
            doNewSend(["13c", [0, 6, 0]]);
            doNewSend(["13c", [0, 0, 1]]);
            doNewSend(["13c", [0, 17, 1]]);
            AutoAim = false;
             if (InstaSpike == true) {
if(Spike2x == true){
            for (let i=0;i<3;i++){
             let angle = myPlayer.dir + toRad(i * 90);
             place(spikeType, angle)
        }}
else
{
if(Spikex2 == true)
{
        place(spikeType, myPlayer.dir + toRad(45));
        place(spikeType, myPlayer.dir - toRad(45));
}
else
{
             place(spikeType);
}
}
             }
        }, InstaSpeed);
if(AR==true){
        setTimeout( () => {
if(thtt==true){
            hat(ID_TurretGear)
}
        doNewSend(["5", [secondary, true]]);
        doNewSend(["ch", ["3.. 2.. 1."]]);
        setTimeout( () => {
            hat(0)
            if (myPlayer.y < 2400){
                hat(15);
            } else if (myPlayer.y > 6850 && myPlayer.y < 7550){
                hat(31);
            } else {
                hat(12);
            }
            acc(11);
        doNewSend(["5", [primary, true]]);
        }, 2000);
        }, 1000);
    }}
document.getElementById("THT").checked = true;
    if(e.keyCode == 116 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if (SuperHeal == false) {
document.getElementById("SH").checked = true;
            SuperHeal = true;
        doNewSend(["ch", ["Q Heal-ON"]]);
        } else {
document.getElementById("SH").checked = false;
        doNewSend(["ch", ["Q Heal-OFF"]]);
            SuperHeal = false;
    }
    }
document.getElementById("tbi").checked = true;
    if(e.keyCode == inspike && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if (InstaSpike == false) {
document.getElementById("ToggleSpike").checked = true;
            InstaSpike = true;
        doNewSend(["ch", ["Insta Spike-ON"]]);
        } else {
document.getElementById("ToggleSpike").checked = false;
        doNewSend(["ch", ["Insta Spike-OFF"]]);
            InstaSpike = false;
    }
}
    if(e.keyCode == prmap && document.activeElement.id.toLowerCase() !== 'chatbox') {
        if (PremiumMap == false) {
document.getElementById("ToggleMap").checked = true;
            PremiumMap = true;
        $("#mapDisplay").css({background: `url('https://media0.giphy.com/media/GaqnjVbSLs2uA/giphy.gif?cid=ecf05e47ea99c7380f6deb1064d8804c8eaeec5c01af4d9d&rid=giphy.gif')`});
        doNewSend(["ch", ["Fighter Cat Map-ON"]]);
        } else {
document.getElementById("ToggleMap").checked = false;
        doNewSend(["ch", ["Fighter Cat Map-OFF"]]);
        $("#mapDisplay").css({background: `rgba(0, 0, 0, 0.25)`})
            PremiumMap = false;
    }
}
    })

document.addEventListener('keyup', (e)=>{
    spikePlacer.stop(e.keyCode);
    boostPlacer.stop(e.keyCode);
    boostSpiker.stop(e.keyCode);
    millPlacer.stop(e.keyCode);
    turretPlacer.stop(e.keyCode);
    healer.stop(e.keyCode);
    if(e.keyCode == 71 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        setTimeout( () => {
            doNewSend(["33", [null]]);
            boostDir = null;
        }, 10);
    }
})


function isElementVisible(e) {
    return (e.offsetParent !== null);
}


function toRad(angle) {
    return angle * 0.01745329251;
}

function dist(a, b){
    return Math.sqrt( Math.pow((b.y-a[2]), 2) + Math.pow((b.x-a[1]), 2) );
}
    let Title=(getRandom(1,2)).toString();
    switch(Title){
        case '1':
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
setTimeout( () => {
document.title = "MooMoo.io Modded"
}, 300);
}, 300);
}, 300);
}, 1000);
}, 300);
}, 300);
}, 300);
}, 1000);
}, 300);
}, 300);
}, 300);
}, 1000);
}, 300);
break;
        case '2':
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
document.title = "MooMoo.io Modded"
setTimeout( () => {
setTimeout( () => {
document.title = "MooMoo.io Modded"
}, 300);
}, 1000);
}, 300);
}, 300);
}, 300);
}, 1000);
}, 300);
}, 300);
}, 300);
}, 1000);
}, 300);
}, 300);
}, 300);
break;

        default:
document.title = "MooMoo.io Modded"
    };

function update() {
    for (let i=0;i<9;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            primary = i;
        }
    }

    for (let i=9;i<16;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            secondary = i;
        }
    }

    for (let i=16;i<19;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            foodType = i - 16;
        }
    }

    for (let i=19;i<22;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            wallType = i - 16;
        }
    }

    for (let i=22;i<26;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            spikeType = i - 16;
        }
    }

    for (let i=26;i<29;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            millType = i - 16;
        }
    }

    for (let i=29;i<31;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            mineType = i - 16;
        }
    }

    for (let i=31;i<33;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString()))){
            boostType = i - 16;
        }
    }

    for (let i=33;i<39;i++){
        if (isElementVisible(document.getElementById("actionBarItem" + i.toString())) && i != 36){
            turretType = i - 16;
        }
    }

    spawnpadType = 36;
}

var ID_WinterCap = 15;
var ID_FlipperHat = 31;
var ID_MarksmanCap = 1;
var ID_BushGear = 10;
var ID_SoldierHelmet = 6;
var ID_AntiVenomGear = 23;
var ID_MusketeerHat = 32;
var ID_MedicGear = 13;
var ID_BullHelmet = 7;
var ID_EmpHelmet = 22;
var ID_BoosterHat = 12;
var ID_BarbarianArmor = 26;
var ID_BullMask = 46;
var ID_WindmillHat = 14;
var ID_SpikeGear = 11;
var ID_BushidoArmor = 16;
var ID_SamuraiArmor = 20;
var ID_ScavengerGear = 27;
var ID_TankGear = 40;
var ID_TurretGear = 53;

// Keys
var TankGearKey = 90;
var BullHelmetKey = 74;
var SoldierHelmetKey = 71;
var TurretKey = 72;
var BoosterHatKey = 66;
var uneqiup = 16;
var SpikeGearKey = 89;
var EmpKey = 84;
var SamuKey = 80;
var SpikeKey = 86

try {
    document.getElementById("moomooio_728x90_home").style.display = "none";
    $("moomooio728x90_home").parent().css({display: "none"});
} catch (e) {
    console.log("[ERROR]Remove Ad");
}
//I.RMOD key
var XD1=113
var XD2=114
var XDD=115
var xxxxTurretk = 192
var InstaKill = 82
var tauh = 84
var auhat = 66
var cteam = 89
var dcteam = 85
var discord = 74
var best = 77
var xxxxtarp = 73
var crash = 75
var ktn = 188
var xxxxxw = 79
var bt = 76
var mk1 = 190
var xxxxwall = 80
var xxxxspi = 186
var gramus = 191
var prmap = 189
var gr = 219
var ktnmus = 222
var inspike = 187
var musket2 = 221
var spinspi = 220

setInterval(() => {
if(ckey == false){
XD1=113
XD2=114
XDD=115
xxxxTurretk = 192
InstaKill = 82
tauh = 84
auhat = 66
cteam = 89
dcteam = 85
discord = 74
best = 77
xxxxtarp = 73
crash = 75
ktn = 188
xxxxxw = 79
bt = 76
mk1 = 190
xxxxwall = 80
xxxxspi = 186
gramus = 191
prmap = 189
gr = 219
ktnmus = 222
inspike = 187
musket2 = 221
spinspi = 220
}
}
, 1);

var KeyChange = document.createElement("divx");
KeyChange.className = "menuCard";
KeyChange.id = "mainSettings";
KeyChange.innerHTML = `
<div id="simpleModalx" class="modalx">
<div class="modal-content">
<div class="modal-headerx">
<span class="closeBtnx">&times;</span>
<h2 style="font-size: 17px; color: #FFFFFF">🔥⁅𝕴๖ۣۜℜ𝕄๏๔⁆⛔ 2nd Menu</h2>
</div>
<div class="modal-body" style="font-size: 17px;">
<div class="flexControl">
<h2 style="font-size: 17px; color: #FFFF00">Super Insta</h2>
<h2 style="font-size: 17px; color: #00FF04">F2=Bow Insta</h2><input value="F2" class="keyPressLow" type="text" disabled="disabled"/>
<h2 style="font-size: 17px; color: #00FF04">F3=AGE 1 Polearm Insta</h2><input value="F3" class="keyPressLow" type="text" disabled="disabled"/>
<h2 style="font-size: 17px; color: #00FF04">F4=AGE 8 Katana Insta</h2><input value="F4" class="keyPressLow" type="text" disabled="disabled"/>
<hr>
<label class="container">Custom Key
<input type="checkbox" id="ck">
<span class="checkmark"></span>
</label>
<hr>
<h2 style="font-size: 17px; color: #00e3f8">~=4 Turret</h2><input value="" id="001" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">Q=Quad Heal</h2><input value="Q" class="keyPressLow" type="text" disabled="disabled"/>
<h2 style="font-size: 17px; color: #00e3f8">K=Change Insta Speed[190/230]</h2><input value="" id="016" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8"><=Stick To Katana</h2><input value="" id="017" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">O=5 Windmill</h2><input value="" id="018" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">L=Bot Mode</h2><input value="" id="019" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">>=Any To Musket</h2><input value="" id="020" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">/=Grate Axe+Musket</h2><input value="" id="023" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">-=Premium Map Toggle</h2><input value="" id="024" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">[=Stick To Great Axe</h2><input value="" id="025" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">'=Katana+Musket</h2><input value="" id="026" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">+=InstaSpike Toggle</h2><input value="" id="027" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">]=Any To CrossBow</h2><input value="" id="028" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
<h2 style="font-size: 17px; color: #00e3f8">\\=Spike To Spining Spike</h2><input value="" id="029" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/>
</div>
<div class="modal-footerx">
<p style="color: #dd00ff; font-size: 17px;"This Hack Too Op</p>
</div>
</div>
</div>
`
document.body.appendChild(KeyChange)

var menuChange = document.createElement("div");
menuChange.className = "menuCard";
menuChange.id = "mainSettings";
menuChange.innerHTML = `
<div id="simpleModal" class="modal">
<div class="modal-content">
<div class="modal-header">
<span class="closeBtn">&times;</span>
<h2 style="font-size: 17px; color: #0074FF">🔥⁅𝕴๖ۣۜℜ𝕄๏๔⁆⛔ Menu</h2>
</div>
<div class="modal-body" style="font-size: 17px;">
<div class="flexControl">
<h3 style="color: #DAEB07; font-size: 17px;">UNQUIP: SHIFT</h3>
<label class="container">Unquip Accessorie
<input type="checkbox" id="xdezz">
<span class="checkmark"></span>
</label>
<center><h3 class="menuPrompt">Tank Gear: </h3> <input value="${String.fromCharCode(TankGearKey)}" id="tankGear" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/></center>
<center><h3 class="menuPrompt">Bull Helmet: </h3> <input value="${String.fromCharCode(BullHelmetKey)}" id="bullHelm" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/></center>
<center><h3 class="menuPrompt">Soldier Helmet: </h3> <input value="${String.fromCharCode(SoldierHelmetKey)}" id="soldier" class="keyPressLow"onkeyup="this.value = this.value.toUpperCase();"  maxlength="1" type="text"/></center>
<center><h3 class="menuPrompt">Turret Gear: </h3> <input value="${String.fromCharCode(TurretKey)}" id="turret" class="keyPressLow" maxlength="1" onkeyup="this.value = this.value.toUpperCase();" type="text"/></center>
<center><h3 class="menuPrompt">Booster Hat: </h3> <input value="${String.fromCharCode(BoosterHatKey)}" id="booster" class="keyPressLow" maxlength="1" onkeyup="this.value = this.value.toUpperCase();" type="text"/></center>
<center><h3 class="menuPrompt">Spike Gear: </h3> <input value="${String.fromCharCode(SpikeGearKey)}" id="spikeg" class="keyPressLow" maxlength="1" onkeyup="this.value = this.value.toUpperCase();" type="text"/></center>
<center><h3 class="menuPrompt">Emp Helmet: </h3> <input value="${String.fromCharCode(EmpKey)}" id="emp" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/></center>
<center><h3 class="menuPrompt">Samurai Armor: </h3> <input value="${String.fromCharCode(SamuKey)}" id="samu" class="keyPressLow" onkeyup="this.value = this.value.toUpperCase();" maxlength="1" type="text"/></center>
<hr>
<label class="container">
<input type="checkbox" id="xnxxcom">
<span class=""></span>
</label>
<h3 style="color: #8A07EB; font-size: 17px;"> Game Settings </h3>
<label class="container">R.E.P. CrossBow
<input type="checkbox" id="REP">
<span class="checkmark"></span>
</label>
<label class="container">Toggle Map Item
<input type="checkbox" id="TMI">
<span class="checkmark"></span>
</label>
<label class="container">Auto Reload
<input type="checkbox" id="MinecraftBetterMiniCraft">
<span class="checkmark"></span>
</label>
<label class="containerx">Turret Gear On Reload
<input type="checkbox" id="THT">
<span class="checkmarkx"></span>
</label>
<label class="container">AutoBull
<input type="checkbox" id="AB優若乳">
<span class="checkmark"></span>
</label>
<label class="container">Auto Aim
<input type="checkbox" id="aaa">
<span class="checkmark"></span>
</label>
<label class="container">Circle
<input type="checkbox" id="ggwtf">
<span class="checkmark"></span>
</label>
<label class="container">Q Heal
<input type="checkbox" id="SH">
<span class="checkmark"></span>
</label>
<label class="container">Crash(doesnt work now)
<input type="checkbox" id="CrashXX">
<span class="checkmark"></span>
</label>
<label class="container">Fighter Cat Map
<input type="checkbox" id="ToggleMap">
<span class="checkmark"></span>
</label>
<hr></hr>
<label class="container">Insta Spike
<input type="checkbox" id="ToggleSpike">
<span class="checkmark"></span>
</label>
<label class="containerx">Spike x2
<input type="checkbox" id="Spike2">
<span class="checkmarkx"></span>
</label>
<label class="containerx">Spike x3
<input type="checkbox" id="Spike3">
<span class="checkmarkx"></span>
</label>
<hr>
<label class="container">Custom Boost Place
<input type="checkbox" id="cbp">
<span class="checkmark"></span>
</label>
<label class="containerx">AutoAim
<input type="checkbox" id="AutoAim">
<span class="checkmarkx"></span>
</label>
<input class="textarea" value="${lt}" type="textarena" id="lt"><input class="textarea" value="${rt}" type="textarena" id="rt">
<p style="color: #3256A5"></p>
<hr>
Game Cursor
<br>
<label class="container">Normal
<input type="checkbox" id="cbp1">
<span class="checkmark"></span>
</label>
<label class="container">Penis Cursor
<input type="checkbox" id="cbp2">
<span class="checkmark"></span>
</label>
<label class="container">Penis Cursor Very Big
<input type="text" id="cbp3">
<span class="text"></span>
</label>
</div>
</div>
<div class="modal-footer">
<p style="color: #05A905; font-size: 1px;">mhmhmmhmhm</p>
<p style="color: #FF8700;">By Instakiller Squad, Radar, and Code.</p>
</div>
</div>
</div>
`
document.body.appendChild(menuChange)

var Msg = document.createElement("Msgdiv");
Msg.className = "menuCard";
Msg.id = "mainSettings";
Msg.innerHTML = `
<div id="MsgsimpleModal" class="Msgmodal">
<div class="modal-content">
<div class="modal-headerwtf">
<span class="MsgcloseBtn">&times;</span>
<h2 style="font-size: 17px; color: #00fffb">Message Settings</h2>
</div>
<div class="modal-body" style="font-size: 17px;">
<div class="flexControl">
<label class="container">Toggle Bow Insta Message
<input type="checkbox" id="tbi">
<span class="checkmark"></span>
</label>
<label class="container">Custom Bow Insta Message
<input type="checkbox" id="CBIM">
<span class="checkmark"></span>
</label>
<input class="textarea5" value="${BIT}" type="textarena" id="BITT">
<label class="container">Toggle All Message
<input type="checkbox" id="MsgON">
<span class="checkmark"></span>
</label>
<hr>
<label class="container">Toggle Message 00
<input type="checkbox" id="M0">
<span class="checkmark"></span>
</label>
<input class="textarea1" value="${M0}" type="textarena" id="0">
<label class="container">Toggle Message 01
<input type="checkbox" id="M1">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M1}" type="textarena" id="1">
<label class="container">Toggle Message 02
<input type="checkbox" id="M2">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M2}" type="textarena" id="2">
<label class="container">Toggle Message 03
<input type="checkbox" id="M3">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M3}" type="textarena" id="3">
<label class="container">Toggle Message 04
<input type="checkbox" id="M4">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M4}" type="textarena" id="4">
<label class="container">Toggle Message 05
<input type="checkbox" id="M5">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M5}" type="textarena" id="5">
<label class="container">Toggle Message 06
<input type="checkbox" id="M6">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M6}" type="textarena" id="6">
<label class="container">Toggle Message 07
<input type="checkbox" id="M7">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M7}" type="textarena" id="7">
<label class="container">Toggle Message 08
<input type="checkbox" id="M8">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M8}" type="textarena" id="8">
<label class="container">Toggle Message 09
<input type="checkbox" id="M9">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M9}" type="textarena" id="9">
<hr>
<label class="container">Auto Chat Toggle
<input type="checkbox" id="exd">
<span class="checkmark"></span>
</label>
Message01<input class="textarea2" value="${R1}" type="textarena" id="01">
<br>
Message02<input class="textarea2" value="${R2}" type="textarena" id="02">
<br>
Message03<input class="textarea2" value="${R3}" type="textarena" id="03">
<br>
Message04<input class="textarea2" value="${R4}" type="textarena" id="04">
<hr>
<label class="container">Never Ending Chat
<input type="checkbox" id="accc">
<span class="checkmark"></span>
</label>
<input value="${R99}" class="textarea3" type="textarena" id="099">
<hr>
<h3 style="color: #f300be; font-size: 17px;">Spike Chat</h3>
<label class="container">FourSpikeChat
<input type="checkbox" id="FourSpikeMsgXToggle">
<span class="checkmark"></span>
</label>
<label class="container">Custom FourSpikeChat
<input type="checkbox" id="FourSpikeMsgToggle">
<span class="checkmark"></span>
</label>
<input type="text" class="textarea4" value="${FourSpikeMsg}" id="FourSpikeMsg"/>
<hr>
<label class="container">BoostSpikeChat
<input type="checkbox" id="BoostSpikeMsgXToggle">
<span class="checkmark"></span>
</label>
<label class="container">Custom BoostSpikeChat
<input type="checkbox" id="BoostSpikeMsgToggle">
<span class="checkmark"></span>
</label>
<input type="text" class="textarea4" value="${BSMsg}" id="BoostSpikeMsg"/>
<hr>
<label class="container">Animated Chat(CUSTOM)
<input type="checkbox" id="AnimateChatToggle">
<span class="checkmark"></span>
</label>
<input class="textarea5" value="${AnimateChat}" type="textarena" id="AnimateChatMessage">
<label class="container">Custom Animate Clan
<input type="checkbox" id="AnimateClanToggle">
<span class="checkmark"></span>
</label>
<label class="container">Super Clan
<input type="checkbox" id="WWW">
<span class="checkmark"></span>
</label>
<input class="textarea5" value="${AnimateClan}" type="textarena" id="AnimateClanMessage">
<label class="container">Custom Animate Text
<input type="checkbox" id="cat">
<span class="checkmark"></span>
</label>
<input class="textarea5" value="${add}" type="textarena" id="catt">
<hr>
<label class="container">Custom Chat
<input type="checkbox" id="CustomDiscordToggle">
<span class="checkmark"></span>
</label>
<input class="textarea" value="${Discord}" type="textarena" id="DiscordMessage">
<hr>
<label class="container">Insta Chat
<input type="checkbox" id="xToggleInstaChatx">
<span class="checkmark"></span>
</label>
<label class="container">Custom Insta Chat
<input type="checkbox" id="ToggleInstaChat">
<span class="checkmark"></span>
</label>
<input class="textarea1" type="text" value="${InstaMessage}" id="InstaChatMessage"/>
<label class="container">InstaMessage 01
<input type="checkbox" id="d1">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM1}" type="textarena" id="IM1">
<label class="container">InstaMessage 02
<input type="checkbox" id="d2">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM2}" type="textarena" id="IM2">
<label class="container">InstaMessage 03
<input type="checkbox" id="d3">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM3}" type="textarena" id="IM3">
<label class="container">InstaMessage 04
<input type="checkbox" id="d4">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM4}" type="textarena" id="IM4">
<label class="container">InstaMessage 05
<input type="checkbox" id="d5">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM5}" type="textarena" id="IM5">
<label class="container">InstaMessage 06
<input type="checkbox" id="d6">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM6}" type="textarena" id="IM6">
<label class="container">InstaMessage 07
<input type="checkbox" id="d7">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM7}" type="textarena" id="IM7">
<label class="container">InstaMessage 08
<input type="checkbox" id="d8">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM8}" type="textarena" id="IM8">
<label class="container">InstaMessage 09
<input type="checkbox" id="d9">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM9}" type="textarena" id="IM9">
<label class="container">InstaMessage 10
<input type="checkbox" id="d10">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM10}" type="textarena" id="IM10">
<br>
Custom Spike Message➡
<input class="textarea3" value="${sp}" type="textarena" id="sss">
</div>
</div>
<div class="modal-footerwtf">
<p style="color: #00fffb;">-Anti Insta-</p>
</div>
</div>
</div>
`
document.body.appendChild(Msg)
var Msg = document.createElement("Msgdiv");
Msg.className = "menuCard";
Msg.id = "mainSettings";
Msg.innerHTML = `
<div id="MsgsimpleModal" class="Msgmodal">
<div class="modal-content">
<div class="modal-headerwtf">
<span class="MsgcloseBtn">&times;</span>
<h2 style="font-size: 17px; color: #00fffb">TJMod - Message</h2>
</div>
<div class="modal-body" style="font-size: 17px;">
<div class="flexControl">
<label class="container">Toggle Bow Insta Message
<input type="checkbox" id="tbi">
<span class="checkmark"></span>
</label>
<label class="container">Custom Bow Insta Message
<input type="checkbox" id="CBIM">
<span class="checkmark"></span>
</label>
<input class="textarea5" value="${BIT}" type="textarena" id="BITT">
<label class="container">Toggle All Message
<input type="checkbox" id="MsgON">
<span class="checkmark"></span>
</label>
<hr>
<label class="container">Toggle Message 00
<input type="checkbox" id="M0">
<span class="checkmark"></span>
</label>
<input class="textarea1" value="${M0}" type="textarena" id="0">
<label class="container">Toggle Message 01
<input type="checkbox" id="M1">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M1}" type="textarena" id="1">
<label class="container">Toggle Message 02
<input type="checkbox" id="M2">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M2}" type="textarena" id="2">
<label class="container">Toggle Message 03
<input type="checkbox" id="M3">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M3}" type="textarena" id="3">
<label class="container">Toggle Message 04
<input type="checkbox" id="M4">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M4}" type="textarena" id="4">
<label class="container">Toggle Message 05
<input type="checkbox" id="M5">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M5}" type="textarena" id="5">
<label class="container">Toggle Message 06
<input type="checkbox" id="M6">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M6}" type="textarena" id="6">
<label class="container">Toggle Message 07
<input type="checkbox" id="M7">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M7}" type="textarena" id="7">
<label class="container">Toggle Message 08
<input type="checkbox" id="M8">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M8}" type="textarena" id="8">
<label class="container">Toggle Message 09
<input type="checkbox" id="M9">
<span class="checkmark"></span>
</label>
<input class="textarea1" class="textarea1" value="${M9}" type="textarena" id="9">
<hr>
<label class="container">Auto Chat(CUSTOM)
<input type="checkbox" id="exd">
<span class="checkmark"></span>
</label>
Message01<input class="textarea2" value="${R1}" type="textarena" id="01">
<br>
Message02<input class="textarea2" value="${R2}" type="textarena" id="02">
<br>
Message03<input class="textarea2" value="${R3}" type="textarena" id="03">
<br>
Message04<input class="textarea2" value="${R4}" type="textarena" id="04">
<hr>
<label class="container">AutoChat
<input type="checkbox" id="accc">
<span class="checkmark"></span>
</label>
<input value="${R99}" class="textarea3" type="textarena" id="099">
<hr>
<h3 style="color: #f300be; font-size: 17px;"> Game Chat Settings </h3>
<label class="container">FourSpikeChat
<input type="checkbox" id="FourSpikeMsgXToggle">
<span class="checkmark"></span>
</label>
<label class="container">Custom FourSpikeChat
<input type="checkbox" id="FourSpikeMsgToggle">
<span class="checkmark"></span>
</label>
<input type="text" class="textarea4" value="${FourSpikeMsg}" id="FourSpikeMsg"/>
<hr>
<label class="container">BoostSpikeChat
<input type="checkbox" id="BoostSpikeMsgXToggle">
<span class="checkmark"></span>
</label>
<label class="container">Custom BoostSpikeChat
<input type="checkbox" id="BoostSpikeMsgToggle">
<span class="checkmark"></span>
</label>
<input type="text" class="textarea4" value="${BSMsg}" id="BoostSpikeMsg"/>
<hr>
<label class="container">Custom Animate Chat
<input type="checkbox" id="AnimateChatToggle">
<span class="checkmark"></span>
</label>
<input class="textarea5" value="${AnimateChat}" type="textarena" id="AnimateChatMessage">
<label class="container">Custom Animate Clan
<input type="checkbox" id="AnimateClanToggle">
<span class="checkmark"></span>
</label>
<label class="container">SuperClan
<input type="checkbox" id="WWW">
<span class="checkmark"></span>
</label>
<input class="textarea5" value="${AnimateClan}" type="textarena" id="AnimateClanMessage">
<label class="container">Custom Animate Text
<input type="checkbox" id="cat">
<span class="checkmark"></span>
</label>
<input class="textarea5" value="${add}" type="textarena" id="catt">
<hr>
<label class="container">Custom Discord Chat
<input type="checkbox" id="CustomDiscordToggle">
<span class="checkmark"></span>
</label>
<input class="textarea" value="${Discord}" type="textarena" id="DiscordMessage">
<hr>
<label class="container">Insta Chat
<input type="checkbox" id="xToggleInstaChatx">
<span class="checkmark"></span>
</label>
<label class="container">Custom Insta Chat
<input type="checkbox" id="ToggleInstaChat">
<span class="checkmark"></span>
</label>
<input class="textarea1" type="text" value="${InstaMessage}" id="InstaChatMessage"/>
<label class="container">InstaMessage 01
<input type="checkbox" id="d1">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM1}" type="textarena" id="IM1">
<label class="container">InstaMessage 02
<input type="checkbox" id="d2">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM2}" type="textarena" id="IM2">
<label class="container">InstaMessage 03
<input type="checkbox" id="d3">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM3}" type="textarena" id="IM3">
<label class="container">InstaMessage 04
<input type="checkbox" id="d4">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM4}" type="textarena" id="IM4">
<label class="container">InstaMessage 05
<input type="checkbox" id="d5">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM5}" type="textarena" id="IM5">
<label class="container">InstaMessage 06
<input type="checkbox" id="d6">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM6}" type="textarena" id="IM6">
<label class="container">InstaMessage 07
<input type="checkbox" id="d7">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM7}" type="textarena" id="IM7">
<label class="container">InstaMessage 08
<input type="checkbox" id="d8">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM8}" type="textarena" id="IM8">
<label class="container">InstaMessage 09
<input type="checkbox" id="d9">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM9}" type="textarena" id="IM9">
<label class="container">InstaMessage 10
<input type="checkbox" id="d10">
<span class="checkmark"></span>
</label>
<input class="textarea2" value="${IM10}" type="textarena" id="IM10">
<br>
Custom Spike Message➡
<input class="textarea3" value="${sp}" type="textarena" id="sss">
</div>
</div>
<div class="modal-footerwtf">
<p style="color: #00fffb;">-Anti Insta-</p>
</div>
</div>
</div>
`
document.body.appendChild(Msg)
//keystart
$("#001").on("input", () => {
    var cval = $("#001").val();
    if (cval){
        xxxxTurretk = cval.toUpperCase();
        xxxxTurretk = xxxxTurretk.charCodeAt(0);
    }
});
$("#003").on("input", () => {
    var cval = $("#003").val();
    if (cval){
        InstaKill = cval.toUpperCase();
        InstaKill = InstaKill.charCodeAt(0);
    }
});
$("#006").on("input", () => {
    var cval = $("#006").val();
    if (cval){
        tauh = cval.toUpperCase();
        tauh = tauh.charCodeAt(0);
    }
});
$("#008").on("input", () => {
    var cval = $("#008").val();
    if (cval){
        auhat = cval.toUpperCase();
        auhat = auhat.charCodeAt(0);
    }
});
$("#009").on("input", () => {
    var cval = $("#009").val();
    if (cval){
        cteam = cval.toUpperCase();
        cteam = cteam.charCodeAt(0);
    }
});
$("#012").on("input", () => {
    var cval = $("#012").val();
    if (cval){
        dcteam = cval.toUpperCase();
        dcteam = dcteam.charCodeAt(0);
    }
});
$("#013").on("input", () => {
    var cval = $("#013").val();
    if (cval){
        discord = cval.toUpperCase();
        discord = discord.charCodeAt(0);
    }
});
$("#014").on("input", () => {
    var cval = $("#014").val();
    if (cval){
        best = cval.toUpperCase();
        best = best.charCodeAt(0);
    }
});
$("#015").on("input", () => {
    var cval = $("#015").val();
    if (cval){
        xxxxtarp = cval.toUpperCase();
        xxxxtarp = xxxxtarp.charCodeAt(0);
    }
});
$("#016").on("input", () => {
    var cval = $("#016").val();
    if (cval){
        crash = cval.toUpperCase();
        crash = crash.charCodeAt(0);
    }
});
$("#017").on("input", () => {
    var cval = $("#017").val();
    if (cval){
        ktn = cval.toUpperCase();
        ktn = ktn.charCodeAt(0);
    }
});
$("#018").on("input", () => {
    var cval = $("#018").val();
    if (cval){
        xxxxxw = cval.toUpperCase();
        xxxxxw = xxxxxw.charCodeAt(0);
    }
});
$("#019").on("input", () => {
    var cval = $("#019").val();
    if (cval){
        bt = cval.toUpperCase();
        bt = bt.charCodeAt(0);
    }
});
$("#020").on("input", () => {
    var cval = $("#020").val();
    if (cval){
        mk1 = cval.toUpperCase();
        mk1 = mk1.charCodeAt(0);
    }
});
$("#021").on("input", () => {
    var cval = $("#021").val();
    if (cval){
        xxxxwall = cval.toUpperCase();
        xxxxwall = xxxxwall.charCodeAt(0);
    }
});
$("#022").on("input", () => {
    var cval = $("#022").val();
    if (cval){
        xxxxspi = cval.toUpperCase();
        xxxxspi = xxxxspi.charCodeAt(0);
    }
});
$("#023").on("input", () => {
    var cval = $("#023").val();
    if (cval){
        gramus = cval.toUpperCase();
        gramus = gramus.charCodeAt(0);
    }
});
$("#024").on("input", () => {
    var cval = $("#024").val();
    if (cval){
        prmap = cval.toUpperCase();
        prmap = prmap.charCodeAt(0);
    }
});
$("#025").on("input", () => {
    var cval = $("#025").val();
    if (cval){
        gr = cval.toUpperCase();
        gr = gr.charCodeAt(0);
    }
});
$("#026").on("input", () => {
    var cval = $("#026").val();
    if (cval){
        ktnmus = cval.toUpperCase();
        ktnmus = ktnmus.charCodeAt(0);
    }
});
$("#027").on("input", () => {
    var cval = $("#027").val();
    if (cval){
        inspike = cval.toUpperCase();
        inspike = inspike.charCodeAt(0);
    }
});
$("#028").on("input", () => {
    var cval = $("#028").val();
    if (cval){
        musket2 = cval.toUpperCase();
        musket2 = musket2.charCodeAt(0);
    }
});
$("#029").on("input", () => {
    var cval = $("#029").val();
    if (cval){
        spinspi = cval.toUpperCase();
        spinspi = spinspi.charCodeAt(0);
    }
});
//keystop
function c1(){
    document.getElementById("cbp2").checked = false;
    document.getElementById("cbp3").checked = false;
}
function c2(){
    document.getElementById("cbp1").checked = false;
    document.getElementById("cbp3").checked = false;
}
function c3(){
    document.getElementById("cbp1").checked = false;
    document.getElementById("cbp2").checked = false;
}

function ezcurbytjhacker(){
if(cursor==1){
$("#gameCanvas").css('cursor', 'url(), default');
}
if(cursor==2){
$("#gameCanvas").css('cursor', 'url(https://lh3.googleusercontent.com/xIXO5YU0WWM3wlfAz09I9hNBBNGhb6Owiy1Agkav4JNOJZX26wxMz8kLqerpU5o5yreXZdjz=w128-h128-e365), default');
}
if(cursor==3)
{
$("#gameCanvas").css('cursor', 'url(https://www.cursor.cc/cursor3d/20160.png), default');
}
}
var WWW = document.querySelector("#tbi")

WWW.addEventListener('change', function() {
    if (this.checked) {
tbi=true
        doNewSend(["ch", ["Toggle Bow Insta Msg-ON"]]);
    } else {
tbi=false
doNewSend(["ch", ["Toggle Bow Insta Msg-OFF"]]);
    }
})
var rep = document.querySelector("#REP")
var rc=true
rep.addEventListener('change', function() {
    if (this.checked) {
rc=true
        doNewSend(["ch", ["R.E.P. CrossBow-ON"]]);
    } else {
rc=false
        doNewSend(["ch", ["R.E.P. CrossBow-ON"]]);
    }
})
var AR=true;
var CBIM = document.querySelector("#CBIM")
var customi=false
CBIM.addEventListener('change', function() {
    if (this.checked) {
customi=true
        doNewSend(["ch", ["Custom Bow Insta Msg-ON"]]);
    } else {
customi=false
doNewSend(["ch", ["Custom Bow Insta Msg-OFF"]]);
    }
})
var MinecraftBetterMiniCraft = document.querySelector("#MinecraftBetterMiniCraft")

MinecraftBetterMiniCraft.addEventListener('change', function() {
    if (this.checked) {
AR=true
        doNewSend(["ch", ["AutoReload-ON"]]);
    } else {
AR=false
doNewSend(["ch", ["AutoReload-OFF"]]);
    }
})
var www = document.querySelector("#WWW")

www.addEventListener('change', function() {
    if (this.checked) {
A=true
        doNewSend(["ch", ["SuperClan-ON"]]);
    } else {
A=false
doNewSend(["ch", ["SuperClan-OFF"]]);
    }
})
var noItem = false;
var ni = document.querySelector("#TMI")

ni.addEventListener('change', function() {
    if (this.checked) {
noItem=true
        doNewSend(["ch", ["Map Item-ON"]]);
    } else {
noItem=false
doNewSend(["ch", ["Map Item-OFF"]]);
    }
})

var AB優若乳 = document.querySelector("#AB優若乳")

AB優若乳.addEventListener('change', function() {
    if (this.checked) {
wtf=true
        doNewSend(["ch", ["AutoBull-ON"]]);
    } else {
wtf=false
doNewSend(["ch", ["AutoBull-OFF"]]);
    }
})
var thtt=true;
var tht = document.querySelector("#THT")

tht.addEventListener('change', function() {
    if (this.checked) {
thtt=true
doNewSend(["ch", ["Turret Gear On Reload-ON"]]);
    } else {
thtt=false
doNewSend(["ch", ["Turret Gear On Reload-OFF"]]);
    }
})

var aaa = document.querySelector("#aaa")

aaa.addEventListener('change', function() {
    if (this.checked) {
aba=true
        doNewSend(["ch", ["AutoAim-ON"]]);
    } else {
aba=false
doNewSend(["ch", ["AutoAim-OFF"]]);
    }
})
var x1 = document.querySelector("#cbp1")

x1.addEventListener('change', function() {
    if (this.checked) {
c1();
        cursor = 1
        doNewSend(["ch", ["Cursor-Normal"]]);
    } else {
        cursor = 1
        doNewSend(["ch", ["Cursor-Normal"]]);
    }
})
var x2 = document.querySelector("#cbp2")

x2.addEventListener('change', function() {
    if (this.checked) {
c2();
        cursor = 2
        doNewSend(["ch", ["Penis Cursor-ON"]]);
    } else {
        cursor = 1
        doNewSend(["ch", ["Cursor-Normal"]]);
    }
})
var x3 = document.querySelector("#cbp3")

x3.addEventListener('change', function() {
    if (this.checked) {
c3();
        cursor = 3
        doNewSend(["ch", ["Penis Cursor-ON"]]);
    } else {
        cursor = 1
        doNewSend(["ch", ["Cursor-Normal"]]);
    }
})
var aa = document.querySelector("#AutoAim")

aa.addEventListener('change', function() {
    if (this.checked) {
        bautoaim = true
        doNewSend(["ch", ["BoostAutoAim-ON"]]);
    } else {
        bautoaim = false
        doNewSend(["ch", ["BoostAutoAim-OFF"]]);
    }
})
var cbp = document.querySelector("#cbp")

cbp.addEventListener('change', function() {
    if (this.checked) {
        custombp = true
        doNewSend(["ch", ["CustomBoostPlace-ON"]]);
    } else {
        custombp = false
        doNewSend(["ch", ["CustomBoostPlace-OFF"]]);
    }
})
var cat = document.querySelector("#cat")

cat.addEventListener('change', function() {
    if (this.checked) {
        tcat = true
        doNewSend(["ch", ["CustomAnimateMsgText-ON"]]);
    } else {
        tcat = false
        doNewSend(["ch", ["CustomAnimateMsgText-OFF"]]);
    }
})
var ckey = false;
var ezzzz = document.querySelector("#ck")

ezzzz.addEventListener('change', function() {
    if (this.checked) {
        ckey = true
        doNewSend(["ch", ["Custom Key-ON"]]);
    } else {
        ckey = false
        doNewSend(["ch", ["Custom Key-OFF"]]);
    }
})
var IMM1 = document.querySelector("#d1")

IMM1.addEventListener('change', function() {
    if (this.checked) {
        IM1T = true
        doNewSend(["ch", ["Insta Message01-ON"]]);
    } else {
        IM1T = false
        doNewSend(["ch", ["Insta Message01-OFF"]]);
    }
})
var IMM2 = document.querySelector("#d2")

IMM2.addEventListener('change', function() {
    if (this.checked) {
        IM2T = true
        doNewSend(["ch", ["Insta Message02-ON"]]);
    } else {
        IM2T = false
        doNewSend(["ch", ["Insta Message02-OFF"]]);
    }
})
var IMM3 = document.querySelector("#d3")

IMM3.addEventListener('change', function() {
    if (this.checked) {
        IM3T = true
        doNewSend(["ch", ["Insta Message03-ON"]]);
    } else {
        IM3T = false
        doNewSend(["ch", ["Insta Message03-OFF"]]);
    }
})
var IMM4 = document.querySelector("#d4")

IMM4.addEventListener('change', function() {
    if (this.checked) {
        IM4T = true
        doNewSend(["ch", ["Insta Message04-ON"]]);
    } else {
        IM4T = false
        doNewSend(["ch", ["Insta Message04-OFF"]]);
    }
})
var IMM5 = document.querySelector("#d5")

IMM5.addEventListener('change', function() {
    if (this.checked) {
        IM5T = true
        doNewSend(["ch", ["Insta Message05-ON"]]);
    } else {
        IM5T = false
        doNewSend(["ch", ["Insta Message05-OFF"]]);
    }
})
var IMM6 = document.querySelector("#d6")

IMM6.addEventListener('change', function() {
    if (this.checked) {
        IM6T = true
        doNewSend(["ch", ["Insta Message06-ON"]]);
    } else {
        IM6T = false
        doNewSend(["ch", ["Insta Message06-OFF"]]);
    }
})
var IMM7 = document.querySelector("#d7")

IMM7.addEventListener('change', function() {
    if (this.checked) {
        IM7T = true
        doNewSend(["ch", ["Insta Message07-ON"]]);
    } else {
        IM7T = false
        doNewSend(["ch", ["Insta Message07-OFF"]]);
    }
})
var IMM8 = document.querySelector("#d8")

IMM8.addEventListener('change', function() {
    if (this.checked) {
        IM8T = true
        doNewSend(["ch", ["Insta Message08-ON"]]);
    } else {
        IM8T = false
        doNewSend(["ch", ["Insta Message08-OFF"]]);
    }
})
var IMM9 = document.querySelector("#d9")

IMM9.addEventListener('change', function() {
    if (this.checked) {
        IM9T = true
        doNewSend(["ch", ["Insta Message09-ON"]]);
    } else {
        IM9T = false
        doNewSend(["ch", ["Insta Message09-OFF"]]);
    }
})
var IMM10 = document.querySelector("#d10")

IMM10.addEventListener('change', function() {
    if (this.checked) {
        IM10T = true
        doNewSend(["ch", ["Insta Message10-ON"]]);
    } else {
        IM10T = false
        doNewSend(["ch", ["Insta Message10-OFF"]]);
    }
})
setInterval(() => {
add = document.getElementById("catt").value;
    if(wtcrashoff==true){
    document.getElementById("CrashXX").checked = false;
}}
, 1);

setInterval(() => {
lt = document.getElementById("lt").value;
rt = document.getElementById("rt").value;
}
, 1);
setInterval(() => {
ezcurbytjhacker();
}
, 1);

setInterval(() => {
BIT = document.getElementById("BITT").value;
sp = document.getElementById("sss").value;
IM1 = document.getElementById("IM1").value;
IM2 = document.getElementById("IM2").value;
IM3 = document.getElementById("IM3").value;
IM4 = document.getElementById("IM4").value;
IM5 = document.getElementById("IM5").value;
IM6 = document.getElementById("IM6").value;
IM7 = document.getElementById("IM7").value;
IM8 = document.getElementById("IM8").value;
IM9 = document.getElementById("IM9").value;
IM10 = document.getElementById("IM10").value;
}
, 1);
var acccc = document.querySelector("#accc")

acccc.addEventListener('change', function() {
    if (this.checked) {Achat = true
        doNewSend(["ch", ["Auto Chat-ON"]]);
    } else {Achat = false
        doNewSend(["ch", ["Auto Chat-OFF"]]);
    }
})
var EWDFAWFAW = document.querySelector("#EWDFAWFAW")

EWDFAWFAW.addEventListener('change', function() {
    if (this.checked) {CB();
    } else {
CW();
           }
})
var Achat = false;
setInterval(() => {
if(RMsg == true){
setTimeout( () => {
        doNewSend(["ch", [R1]]);
setTimeout( () => {
        doNewSend(["ch", [R2]]);
setTimeout( () => {
        doNewSend(["ch", [R3]]);
setTimeout( () => {
        doNewSend(["ch", [R4]]);
}, 1000);
}, 1000);}
, 1000);}
, 1000);
}
}, 4000);
setInterval(() => {
if(Achat == true){
    doNewSend(["ch", [R99]]);
}
}, 0);
var xd = false;
setInterval(() => {
R99 = document.getElementById("099").value;
}
, 1);
var ezxd = document.querySelector("#xdezz")

ezxd.addEventListener('change', function() {
    if (this.checked) {xd = true
        doNewSend(["ch", ["Unquip Accessorie-ON"]]);
    } else {xd = false
        doNewSend(["ch", ["Unquip Accessorie-OFF"]]);
    }
})

var music = new Audio(ML);

var rip = document.querySelector("#xnxxcom")

rip.addEventListener('change', function() {
    if (this.checked) {
music.play();
        doNewSend(["ch", ["Music-ON"]]);
    } else {
        doNewSend(["ch", ["Music-OFF"]]);
music.pause();
    }
})

var SH = document.querySelector("#SH")

SH.addEventListener('change', function() {
    if (this.checked) {
        SuperHeal = true;
        doNewSend(["ch", ["Q Heal-ON"]]);
    } else {
        SuperHeal = false;
        doNewSend(["ch", ["Q Heal-OFF"]]);
    }
})

var exd = document.querySelector("#exd")

exd.addEventListener('change', function() {
    if (this.checked) {
        RMsg = true;
        doNewSend(["ch", ["Say Message-ON"]]);
    } else {
        RMsg = false;
        doNewSend(["ch", ["Say Message-OFF"]]);
    }
})

setInterval(() => {
R1 = document.getElementById("01").value;
R2 = document.getElementById("02").value;
R3 = document.getElementById("03").value;
R4 = document.getElementById("04").value;
}
, 1);

var MsgON = document.querySelector("#MsgON")

MsgON.addEventListener('change', function() {
    if (this.checked) {
        zMsg = true;
        doNewSend(["ch", ["Toggle Message-ON"]]);
    } else {
        zMsg = false;
        doNewSend(["ch", ["Toggle Message-OFF"]]);
    }
})

var M00 = document.querySelector("#M0")

M00.addEventListener('change', function() {
    if (this.checked) {
        zM0 = true;
        doNewSend(["ch", ["M0 Message-ON"]]);
    } else {
        zM0 = false;
        doNewSend(["ch", ["M0 Message-OFF"]]);
    }
})

setInterval(() => {
M0 = document.getElementById("0").value;
}
, 1);

var M01 = document.querySelector("#M1")

M01.addEventListener('change', function() {
    if (this.checked) {
        zM1 = true;
        doNewSend(["ch", ["M1 Message-ON"]]);
    } else {
        zM1 = false;
        doNewSend(["ch", ["M1 Message-OFF"]]);
    }
})

setInterval(() => {
M1 = document.getElementById("1").value;
}
, 1);

var M02 = document.querySelector("#M2")

M02.addEventListener('change', function() {
    if (this.checked) {
        zM2 = true;
        doNewSend(["ch", ["M2 Message-ON"]]);
    } else {
        zM2 = false;
        doNewSend(["ch", ["M2 Message-OFF"]]);
    }
})

setInterval(() => {
M2 = document.getElementById("2").value;
}
, 1);

var M03 = document.querySelector("#M3")

M03.addEventListener('change', function() {
    if (this.checked) {
        zM3 = true;
        doNewSend(["ch", ["M3 Message-ON"]]);
    } else {
        zM3 = false;
        doNewSend(["ch", ["M3 Message-OFF"]]);
    }
})

setInterval(() => {
M3 = document.getElementById("3").value;
}
, 1);

var M04 = document.querySelector("#M4")

M04.addEventListener('change', function() {
    if (this.checked) {
        zM4 = true;
        doNewSend(["ch", ["M4 Message-ON"]]);
    } else {
        zM4 = false;
        doNewSend(["ch", ["M4 Message-OFF"]]);
    }
})

setInterval(() => {
M4 = document.getElementById("4").value;
}
, 1);

var M05 = document.querySelector("#M5")

M05.addEventListener('change', function() {
    if (this.checked) {
        zM5 = true;
        doNewSend(["ch", ["M5 Message-ON"]]);
    } else {
        zM5 = false;
        doNewSend(["ch", ["M5 Message-OFF"]]);
    }
})

setInterval(() => {
M5 = document.getElementById("5").value;
}
, 1);

var M06 = document.querySelector("#M6")

M06.addEventListener('change', function() {
    if (this.checked) {
        zM6 = true;
        doNewSend(["ch", ["M6 Message-ON"]]);
    } else {
        zM6 = false;
        doNewSend(["ch", ["M6 Message-OFF"]]);
    }
})

setInterval(() => {
M6 = document.getElementById("6").value;
}
, 1);

var M07 = document.querySelector("#M7")

M07.addEventListener('change', function() {
    if (this.checked) {
        zM7 = true;
        doNewSend(["ch", ["M7 Message-ON"]]);
    } else {
        zM7 = false;
        doNewSend(["ch", ["M7 Message-OFF"]]);
    }
})

setInterval(() => {
M7 = document.getElementById("7").value;
}
, 1);

var M08 = document.querySelector("#M8")

M08.addEventListener('change', function() {
    if (this.checked) {
        zM8 = true;
        doNewSend(["ch", ["M8 Message-ON"]]);
    } else {
        zM8 = false;
        doNewSend(["ch", ["M8 Message-OFF"]]);
    }
})

setInterval(() => {
M8 = document.getElementById("8").value;
}
, 1);

var M09 = document.querySelector("#M9")

M09.addEventListener('change', function() {
    if (this.checked) {
        zM9 = true;
        doNewSend(["ch", ["M9 Message-ON"]]);
    } else {
        zM9 = false;
        doNewSend(["ch", ["M9 Message-OFF"]]);
    }
})

setInterval(() => {
M9 = document.getElementById("9").value;
}
, 1);

$("#tankGear").on("input", () => {
    var cval = $("#tankGear").val();
    if (cval){
        TankGearKey = cval.toUpperCase();
        TankGearKey = TankGearKey.charCodeAt(0);
        console.log("[INFO]TankGearKey");
    }
});

$("#bullHelm").on("input", () => {
    var cval = $("#bullHelm").val();
    if (cval){
        BullHelmetKey = cval.toUpperCase();
        BullHelmetKey = BullHelmetKey.charCodeAt(0);
        console.log("[INFO]BullHelmetKey");
    }
});

$("#soldier").on("input", () => {
    var cval = $("#soldier").val();
    if (cval){
        SoldierHelmetKey = cval.toUpperCase();
        SoldierHelmetKey = SoldierHelmetKey.charCodeAt(0);
        console.log("[INFO]SoldierHelmetKey");
    }
});

$("#turret").on("input", () => {
    var cval = $("#turret").val();
    if (cval){
        TurretKey = cval.toUpperCase();
        TurretKey = TurretKey.charCodeAt(0);
        console.log("[INFO]TurretKey");
    }
});

$("#emp").on("input", () => {
    var cval = $("#emp").val();
    if (cval){
        EmpKey = cval.toUpperCase();
        EmpKey = EmpKey.charCodeAt(0);
        console.log("[INFO]EmpKey");
    }
});

$("#samu").on("input", () => {
    var cval = $("#samu").val();
    if (cval){
        SamuKey = cval.toUpperCase();
        SamuKey = SamuKey.charCodeAt(0);
        console.log("[INFO]SamuKey");
    }
});

$("#booster").on("input", () => {
    var cval = $("#booster").val();
    if (cval){
        BoosterHatKey = cval.toUpperCase();
        BoosterHatKey = BoosterHatKey.charCodeAt(0);
        console.log("[INFO]BoosterHatKey");
    }
});

$("#spikeg").on("input", () => {
    var cval = $("#spikeg").val();
    if (cval){
        SpikeGearKey = cval.toUpperCase();
        SpikeGearKey = SpikeGearKey.charCodeAt(0);
        console.log("[INFO]SpikeGearKey");
    }
});

$("#trap").on("input", () => {
    var cval = $("#trap").val();
    if (cval){
        TrapKey = cval.toUpperCase();
        TrapKey = TrapKey.charCodeAt(0);
        console.log("[INFO]TrapKey");
    }
});

var styleItem = document.createElement("style");
styleItem.type = "text/css";
styleItem.appendChild(document.createTextNode(`
    #myContainer {
        position:               absolute;
        top:                    460px;
        left:                   1655px;
        font-size:              20px;
        background:             none;
        border:                 3px black;
        margin:                 5px;
        opacity:                1;
        z-index:                1100;
        padding:                5px 20px;
    }

    #myContainer2 {
        position:               absolute;
        left:                   1695px;
        top:                    460px;
        font-size:              20px;
        background:             none;
        border:                 transparent;
        margin:                 5px;
        opacity:                1;
        z-index:                1100;
        padding:                5px 20px;
    }
    #myContainer3 {
        position:               absolute;
        left:                   1735px;
        top:                    460px;
        font-size:              20px;
        background:             none;
        border:                 transparent;
        margin:                 5px;
        opacity:                1;
        z-index:                1100;
        padding:                5px 20px;
    }
    #myContainer4 {
        position:               absolute;
        left:                   1775px;
        top:                    460px;
        font-size:              20px;
        background:             none;
        border:                 transparent;
        margin:                 5px;
        opacity:                1;
        z-index:                1100;
        padding:                5px 20px;
    }
    #myContainer5 {
        position:               absolute;
        left:                   1815px;
        top:                    460px;
        font-size:              20px;
        background:             none;
        border:                 transparent;
        margin:                 5px;
        opacity:                1;
        z-index:                1100;
        padding:                5px 20px;
    }
    #myContainer6 {
        position:               absolute;
        left:                   1855px;
        top:                    460px;
        font-size:              20px;
        background:             none;
        border:                 transparent;
        margin:                 5px;
        opacity:                1;
        z-index:                1100;
        padding:                5px 20px;
    }
    #myContainer7 {
        position:               absolute;
        left:                   1720px;
        top:                    490px;
        font-size:              20px;
        background:             none;
        border:                 transparent;
        margin:                 5px;
        opacity:                1;
        z-index:                1100;
        padding:                5px 20px;
    }
    #myContainer8 {
        position:               absolute;
        left:                   1760px;
        top:                    490px;
        font-size:              20px;
        background:             none;
        border:                 transparent;
        margin:                 5px;
        opacity:                1;
        z-index:                1100;
        padding:                5px 20px;
    }
    #myContainer9 {
        position:               absolute;
        left:                   1800px;
        top:                    490px;
        font-size:              20px;
        background:             none;
        border:                 transparent;
        margin:                 5px;
        opacity:                1;
        z-index:                1100;
        padding:                5px 20px;
    }
    #myContainer10 {
        position:               absolute;
        left:                   1760px;
        top:                    520px;
        font-size:              20px;
        background:             none;
        border:                 transparent;
        margin:                 5px;
        opacity:                1;
        z-index:                1100;
        padding:                5px 20px;
    }

    #myButton {
background: no-repeat center/80% url('http://moomoo.io/img/hats/hat_6.png');
width: 40px;
height: 30px;
        cursor:                 pointer;

}
    #myButton2 {
background: no-repeat center/80% url('http://moomoo.io/img/hats/hat_7.png');
width: 40px;
height: 30px;
        cursor:                 pointer;

}
    #myButton3 {
background: no-repeat center/80% url('http://moomoo.io/img/hats/hat_22.png');
width: 40px;
height: 30px;
        cursor:                 pointer;

}
    #myButton4 {
background: no-repeat center/80% url('http://moomoo.io/img/hats/hat_12.png');
width: 40px;
height: 30px;
        cursor:                 pointer;

}
    #myButton5 {
background: no-repeat center/80% url('https://vignette.wikia.nocookie.net/moom/images/a/a3/Hat_11_P.png');
width: 40px;
height: 30px;
        cursor:                 pointer;

}
    #myButton6 {
background: no-repeat center/80% url('https://vignette.wikia.nocookie.net/moom/images/e/e8/Hat_53_P.png');
width: 40px;
height: 30px;
        cursor:                 pointer;

}
    #myButton7 {
background: no-repeat center/80% url('http://moomoo.io/img/hats/hat_20.png');
width: 40px;
height: 30px;
        cursor:                 pointer;

}
    #myButton8 {
background: no-repeat center/80% url('http://moomoo.io/img/hats/hat_55.png');
width: 40px;
height: 30px;
        cursor:                 pointer;

}
    #myButton9 {
background: no-repeat center/80% url('http://moomoo.io/img/hats/hat_56.png');
width: 40px;
height: 30px;
        cursor:                 pointer;

}
    #myButton10 {
background: no-repeat center/80% url('https://vignette.wikia.nocookie.net/moom/images/5/5c/Access_11.png/revision/latest?cb=20171116021740');
width: 40px;
height: 30px;
        cursor:                 pointer;

}
    #myContainer p {

    }
    #myContainer p2 {

    }
    #myContainer p3 {

    }
    #myContainer p4 {

    }
    #myContainer p5 {

    }
    #myContainer p6 {

    }
    #myContainer p7 {

    }
    #myContainer p8 {

    }
    #myContainer p9 {

    }
    #myContainer p10 {

    }
.textarea {
  background: url() center center no-repeat; /* This ruins default border */
  border: 1px solid #888;
}
.textarea1 {
  background: url() center center no-repeat; /* This ruins default border */
  border: 1px solid #888;
}
.textarea2 {
  background: url() center center no-repeat; /* This ruins default border */
  border: 1px solid #888;
}
.textarea3 {
  background: url() center center no-repeat; /* This ruins default border */
  border: 1px solid #888;
}
.textarea4 {
  background: url() center center no-repeat; /* This ruins default border */
  border: 1px solid #888;
}
.textarea5 {
  background: url() center center no-repeat; /* This ruins default border */
  border: 1px solid #888;
}
.keyPressLow {
    margin-left: 8px;
    font-size: 16px;
    margin-right: 8px;
    height: 25px;
    width: 50px;
    background-color: #fcfcfc;
    border-radius: 3.5px;
    border: none;
    text-align: center;
    color: #4A4A4A;
    border: 0.5px solid #f2f2f2;
}

.menuPrompt {
    font-size: 17px;
    font-family: 'Hammersmith One';
    color: #4A4A4A;
    flex: 0.2;
    text-align: center;
    margin-top: 10px;
    display: inline-block;
}

.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    overflow: auto;
    height: 100%;
    width: 100%;
}

.modalx {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    overflow: auto;
    height: 100%;
    width: 100%;
}

.Msgmodal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    overflow: auto;
    height: 100%;
    width: 100%;
}

.modal-content {
    margin: 10% auto;
    width: 40%;
    box-shadow: 0 5px 8px 0 orange, 0 7px 20px 0 orange;
    font-size: 14px;
    line-height: 1.6;
}

.modal-headerx h2,
.modal-footerx h3 {
  margin: 0;
}

.modal-headerx {
    background: light;
    padding: 15px;
    color: orange;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
}

.modal-footerx {
    background: orange
    padding: 10px;
    color: light;
    text-align: center;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
}

.modal-headerwtf h2,
.modal-footerwtf h3 {
  margin: 0;
}

.modal-headerwtf {
    background: yello;
    padding: 15px;
    color: orange;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
}

.modal-footerwtf {
    background: red;
    padding: 10px;
    color: light;
    text-align: center;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
}


.modal-header h2,
.modal-footer h3 {
  margin: 0;
}

.modal-header {
    background: light;
    padding: 15px;
    color: orange;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
}

.modal-body {
    padding: 10px 20px;
    background: frost;
}

.modal-footer {
    background: #05A905;
    padding: 10px;
    color: black;
    text-align: center;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
}

.closeBtn {
    color: #ccc;
    float: right;
    font-size: 30px;
    color: black;
}

.closeBtn:hover,
.closeBtn:focus {
    color: #dd4a42;
    text-decoration: none;
    cursor: pointer;
}

.closeBtnx {
    color: #ccc;
    float: right;
    font-size: 30px;
    color: #fff;
}

.closeBtnx:hover,
.closeBtnx:focus {
    color: #dd4a42;
    text-decoration: none;
    cursor: pointer;
}

.MsgcloseBtn {
    color: #ccc;
    float: right;
    font-size: 30px;
    color: #fff;
}

.MsgcloseBtn:hover,
.MsgcloseBtn:focus {
    color: red;
    text-decoration: none;
    cursor: pointer;
}

/* Customize the label (the container) */
.containerx {
  display: block;
  position: relative;
  padding-left: 55px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 16px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.containerx input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 16px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmarkx {
  position: absolute;
  top: 0;
  left: 20px;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.containerx:hover input ~ .checkmarkx {
  background-color: #ccc;
}

/* When the checkbox is checked, add a red background */
.containerx input:checked ~ .checkmarkx {
  background-color: #e0432b;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmarkx:after {
  content: "";
  position: absolute;
  display: none;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a red background */
.container input:checked ~ .checkmark {
  background-color: #0074FF;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

`))
document.head.appendChild(styleItem);

$("#adCard").css({display: "none"});

function disable(e) { if ((e.which || e.keyCode) == 112 || (e.which || e.keyCode) == 113 || (e.which || e.keyCode) == 114 || (e.which || e.keyCode) == 115 || (e.which || e.keyCode) == 116 || (e.which || e.keyCode) == 117 || (e.which || e.keyCode) == 118 || (e.which || e.keyCode) == 119 || (e.which || e.keyCode) == 120 || (e.which || e.keyCode) == 122 || (e.which || e.keyCode) == 123) e.preventDefault(); };

$(document).ready(function(){
 $(document).on("keydown", disable);
});
document.addEventListener('keydown', function(e) {
if (e.keyCode == 112){
        if (modalx.style.display = "none") {
            modalx.style.display = "block";
        } else {
            modalx.style.display = "none";}}
if (e.keyCode == 110){
        if (Msgmodal.style.display = "none") {
            Msgmodal.style.display = "block";
        } else {
            Msgmodal.style.display = "none";}}
    if (e.keyCode == uneqiup && document.activeElement.id.toLowerCase() !== 'chatbox'){
        console.log("[INFO]Successful");hat(0)
if(xd == true){
               acc(0)}
    } else if (e.keyCode == 27){
        if (modal.style.display = "none") {
            modal.style.display = "block";
        } else {
            modal.style.display = "none";
        }
    } else if (e.keyCode == TankGearKey && document.activeElement.id.toLowerCase() !== 'chatbox'){
        storeEquip(ID_TankGear);
    } else if (e.keyCode == SoldierHelmetKey && document.activeElement.id.toLowerCase() !== 'chatbox'){
        storeEquip(ID_SoldierHelmet);
    } else if (e.keyCode == BullHelmetKey && document.activeElement.id.toLowerCase() !== 'chatbox'){
        storeEquip(ID_BullHelmet);
    } else if (e.keyCode == BoosterHatKey && document.activeElement.id.toLowerCase() !== 'chatbox'){
        storeEquip(ID_BoosterHat);
    } else if (e.keyCode == EmpKey && document.activeElement.id.toLowerCase() !== 'chatbox'){
        storeEquip(ID_EmpHelmet);
    } else if (e.keyCode == SamuKey && document.activeElement.id.toLowerCase() !== 'chatbox'){
        storeEquip(ID_SamuraiArmor);
    } else if (e.keyCode == SpikeGearKey && document.activeElement.id.toLowerCase() !== 'chatbox'){
        storeEquip(ID_SpikeGear);
    } else if (e.keyCode == TurretKey && document.activeElement.id.toLowerCase() !== 'chatbox'){
        storeEquip(ID_TurretGear);
    }
})
// Get modal element
var modalx = document.getElementById("simpleModalx");
// Get close button
var closeBtnx = document.getElementsByClassName('closeBtnx')[0];

// Events
closeBtnx.addEventListener('click', closeModalx);
window.addEventListener('click', outsideClick);

// Close
function closeModalx() {
  modalx.style.display = 'none';
}
function outsideClick(e) {
  if (e.target == modalx) {
    modalx.style.display = 'none';
  }
}
// Get modal element
var modal = document.getElementById("simpleModal");
// Get close button
var closeBtn = document.getElementsByClassName('closeBtn')[0];

// Events
closeBtn.addEventListener('click', closeModal);

// Close
function closeModal() {
  modal.style.display = 'none';
}

// Get modal element
var Msgmodal = document.getElementById("MsgsimpleModal");
// Get close button
var MsgcloseBtn = document.getElementsByClassName('MsgcloseBtn')[0];

// Events
MsgcloseBtn.addEventListener('click', MsgcloseModal);

// Close
function MsgcloseModal() {
  Msgmodal.style.display = 'none';
}

var ggwtf = document.querySelector("#ggwtf")

ggwtf.addEventListener('change', function() {
    if (this.checked) {
        circle = true;
        doNewSend(["ch", ["Circle-ON"]]);
    } else {
        circle = false;
        doNewSend(["ch", ["Circle-OFF"]]);
    }
})

var Crash = document.querySelector("#CrashXX")

Crash.addEventListener('change', function() {
    if (this.checked) {
        ToggleCrash = true;
        doNewSend(["ch", ["Crash-ON"]]);
    } else {
        ToggleCrash = false;
        doNewSend(["ch", ["Crash-OFF"]]);
    }
})

var ToggleMap = document.querySelector("#ToggleMap")

ToggleMap.addEventListener('change', function() {
    if (this.checked) {
        PremiumMap = true;
        $("#mapDisplay").css({background: `url('https://images-ext-1.discordapp.net/external/DykgDud-FKeLsFG7fhpoFuC1ZlVquF8hO6FY9TmlWVY/https/media.tenor.com/images/de6eab03163e818af54b26b2c3d067d5/tenor.gif')`});
        doNewSend(["ch", ["Dog Map-ON"]]);
    } else {
        PremiumMap = false;
        $("#mapDisplay").css({background: `rgba(0, 0, 0, 0.25)`})
        doNewSend(["ch", ["Dog Map-OFF"]]);
    }
})

var ToggleSpike = document.querySelector("#ToggleSpike")

ToggleSpike.addEventListener('change', function() {
    if (this.checked) {
        InstaSpike = true;
        doNewSend(["ch", ["Insta Spike-ON"]]);
    } else {
        InstaSpike = false;
        doNewSend(["ch", ["Insta Spike-OFF"]]);
    }
})

var Spike2 = document.querySelector("#Spike2")

Spike2.addEventListener('change', function() {
    if (this.checked) {
        Spikex2 = true;
        doNewSend(["ch", ["Insta 2 Spike-ON"]]);
    } else {
        Spikex2 = false;
        doNewSend(["ch", ["Insta 2 Spike-OFF"]]);
    }
})

var Spike3 = document.querySelector("#Spike3")

Spike3.addEventListener('change', function() {
    if (this.checked) {
        Spike2x = true;
        doNewSend(["ch", ["Insta 3 Spike-ON"]]);
    } else {
        Spike2x = false;
        doNewSend(["ch", ["Insta 3 Spike-OFF"]]);
    }
})

var ToggleInstaChat = document.querySelector("#ToggleInstaChat")

ToggleInstaChat.addEventListener('change', function() {
    if (this.checked) {
        CustomInstaChat = true;
        doNewSend(["ch", ["Custom Insta Chat-ON"]]);
            setTimeout( () => {
    doNewSend(["ch", [InstaMessage]]);
            }, 5000);
    } else {
        CustomInstaChat = false;
        doNewSend(["ch", ["Custom Insta Chat-OFF"]]);
    }
})

var AnimateChatToggle = document.querySelector("#AnimateChatToggle")

AnimateChatToggle.addEventListener('change', function() {
    if (this.checked) {
        CustomAnimateChat = true;
        doNewSend(["ch", ["Custom Animate Chat-ON"]]);
            setTimeout( () => {
    doNewSend(["ch", [AnimateChat]]);
            }, 5000);
    } else {
        CustomAnimateChat = false;
        doNewSend(["ch", ["Custom Animate Chat-OFF"]]);
    }
})

var AnimateClanToggle = document.querySelector("#AnimateClanToggle")

AnimateClanToggle.addEventListener('change', function() {
    if (this.checked) {
        CustomAnimateClan = true;
        doNewSend(["ch", ["Custom Animate Clan-ON"]]);
            setTimeout( () => {
    doNewSend(["ch", [AnimateClan]]);
            }, 5000);
    } else {
        CustomAnimateClan = false;
        doNewSend(["ch", ["Custom Animate Clan-OFF"]]);
    }
})

var CustomDiscordToggle = document.querySelector("#CustomDiscordToggle")

CustomDiscordToggle.addEventListener('change', function() {
    if (this.checked) {
        CustomDiscord = true;
        doNewSend(["ch", ["Custom Text-ON"]]);
            setTimeout( () => {
    doNewSend(["ch", [Discord]]);
            }, 5000);
    } else {
        CustomDiscord = false;
        doNewSend(["ch", ["Custom Text-OFF"]]);
    }
})

var FourSpikesMsgToggle = document.querySelector("#FourSpikeMsgToggle")

FourSpikesMsgToggle.addEventListener('change', function() {
    if (this.checked) {
        FourSpikeMsgToggle = true;
        doNewSend(["ch", ["Custom 4SpikesMessage-ON"]]);
            setTimeout( () => {
    doNewSend(["ch", [FourSpikeMsg]]);
            }, 5000);
    } else {
        FourSpikeMsgToggle = false;
        doNewSend(["ch", ["Custom 4SpikesMessage-OFF"]]);
    }
})

var FourSpikesMsgXToggle = document.querySelector("#FourSpikeMsgXToggle")

FourSpikesMsgXToggle.addEventListener('change', function() {
    if (this.checked) {
        FourSpikeMsgX = true;
        doNewSend(["ch", ["4SpikesMessage-ON"]]);
            setTimeout( () => {
    doNewSend(["ch", [FourSpikeMsg]]);
            }, 5000);
    } else {
        FourSpikeMsgX = false;
        doNewSend(["ch", ["4SpikesMessage-OFF"]]);
    }
})

var xToggleInstaChatx = document.querySelector("#xToggleInstaChatx")

xToggleInstaChatx.addEventListener('change', function() {
    if (this.checked) {
        xInstaChatx = true;
        doNewSend(["ch", ["InstaChat-ON"]]);
    } else {
        xInstaChatx = false;
        doNewSend(["ch", ["InstaChat-OFF"]]);
    }
})

var BoostSpikeMsgToggle = document.querySelector("#BoostSpikeMsgToggle")

BoostSpikeMsgToggle.addEventListener('change', function() {
    if (this.checked) {
        BSChatX = true;
        doNewSend(["ch", ["Custom BoostSpikeMessage-ON"]]);
            setTimeout( () => {
    doNewSend(["ch", [BSMsg]]);
            }, 5000);
    } else {
        BSChatX = false;
        doNewSend(["ch", ["Custom BoostSpikeMessage-OFF"]]);
    }
})

var BoostSpikeMsgXToggle = document.querySelector("#BoostSpikeMsgXToggle")

BoostSpikeMsgXToggle.addEventListener('change', function() {
    if (this.checked) {
        BSChat = true;
        doNewSend(["ch", ["BoostSpikeMessage-ON"]]);
            setTimeout( () => {
    doNewSend(["ch", [BSMsg]]);
            }, 5000);
    } else {
        BSChat = false;
        doNewSend(["ch", ["BoostSpikeMessage-OFF"]]);
    }
})

setInterval(() => {
InstaMessage = document.getElementById("InstaChatMessage").value;
}
, 1);

setInterval(() => {
AnimateChat = document.getElementById("AnimateChatMessage").value;
}
, 1);

setInterval(() => {
AnimateClan = document.getElementById("AnimateClanMessage").value;
}
, 1);

setInterval(() => {
Discord = document.getElementById("DiscordMessage").value;
}
, 1);

setInterval(() => {
FourSpikeMsg = document.getElementById("FourSpikeMsg").value;
}
, 1);
setInterval(() => {
BSMsg = document.getElementById("BoostSpikeMsg").value;
}
, 1);
document.addEventListener('keyup', (e)=>{
    spikePlacer.stop(e.keyCode);
    boostPlacer.stop(e.keyCode);
    millPlacer.stop(e.keyCode);
    turretPlacer.stop(e.keyCode);
    healer.stop(e.keyCode);
    if(e.keyCode == 71 && document.activeElement.id.toLowerCase() !== 'chatbox') {
        setTimeout( () => {
            doNewSend(["33", [null]]);
            boostDir = null;
        }, 10);
    }
})

function animate(space, chance) {
    let result = '';
    let characters;
    if(space) {
        if(CustomAnimateChat == true)
        {
        characters = AnimateChat;
        }
        else
        {
        characters = 'Run Or Die';
        }
    } else {
        if(CustomAnimateClan == true)
        {
        characters = AnimateClan
        }
      else
        {
        characters = '-IRMOD-';
        }
    }
    if(space) {
        characters = characters.padStart((30 - characters.length) / 2 + characters.length)
        characters = characters.padEnd(30);
    }
    let count = 0;
    for (let i = 0; i < characters.length; i++ ) {
       if(Math.floor(Math.random() * chance) == 1 && characters.charAt(i) != "-" && count < 2 && characters.charAt(i) != " ") {
           if(tcat==true)
           {
               result += add;
           }
           else
           {
               result += "_";
           }
           count++
       } else {
           result += characters.charAt(i);
       }
    }
    return result;
}
var zNode = document.createElement('div');
zNode.innerHTML = '<button id="myButton" type="button">'
    + '</button>';
zNode.setAttribute('id', 'myContainer');
document.body.appendChild(zNode);

var zNode2 = document.createElement('div');
zNode2.innerHTML = '<button id="myButton2" type="button">'
    + ' </button>';
zNode2.setAttribute('id', 'myContainer2');
document.body.appendChild(zNode2);

var zNode3 = document.createElement('div');
zNode3.innerHTML = '<button id="myButton3" type="button">'
    + ' </button>';
zNode3.setAttribute('id', 'myContainer3');
document.body.appendChild(zNode3);

var zNode4 = document.createElement('div');
zNode4.innerHTML = '<button id="myButton4" type="button">'
    + ' </button>';
zNode4.setAttribute('id', 'myContainer4');
document.body.appendChild(zNode4);

var zNode5 = document.createElement('div');
zNode5.innerHTML = '<button id="myButton5" type="button">'
    + ' </button>';
zNode5.setAttribute('id', 'myContainer5');
document.body.appendChild(zNode5);

var zNode6 = document.createElement('div');
zNode6.innerHTML = '<button id="myButton6" type="button">'
    + ' </button>';
zNode6.setAttribute('id', 'myContainer6');
document.body.appendChild(zNode6);

var zNode7 = document.createElement('div');
zNode7.innerHTML = '<button id="myButton7" type="button">'
    + ' </button>';
zNode7.setAttribute('id', 'myContainer7');
document.body.appendChild(zNode7);

var zNode8 = document.createElement('div');
zNode8.innerHTML = '<button id="myButton8" type="button">'
    + ' </button>';
zNode8.setAttribute('id', 'myContainer8');
document.body.appendChild(zNode8);

var zNode9 = document.createElement('div');
zNode9.innerHTML = '<button id="myButton9" type="button">'
    + ' </button>';
zNode9.setAttribute('id', 'myContainer9');
document.body.appendChild(zNode9);

var zNode10 = document.createElement('div');
zNode10.innerHTML = '<button id="myButton10" type="button">'
    + ' </button>';
zNode10.setAttribute('id', 'myContainer10');
document.body.appendChild(zNode10);

document.getElementById ("myButton").addEventListener (
    "click", ButtonClickAction, false
);

function ButtonClickAction (zEvent) {
        var hat = 6;
    var zNode = document.createElement('p');
    zNode.innerHTML = storeEquip(hat).break;
    document.getElementById ("myContainer").appendChild (zNode);

}

document.getElementById ("myButton2").addEventListener (
    "click", ButtonClickAction2, false
);

function ButtonClickAction2 (zEvent) {
        var hat2 = 7;
       var zNode2 = document.createElement('p2');
    zNode2.innerHTML = storeEquip(hat2).break;
    document.getElementById ("myContainer2").appendChild (zNode2);
    }

function ButtonClickAction3 (zEvent) {
        var hat3 = 22;
    var zNode3 = document.createElement('p3');
    zNode3.innerHTML = storeEquip(hat3).break;
    document.getElementById ("myContainer3").appendChild (zNode3);

}

document.getElementById ("myButton4").addEventListener (
    "click", ButtonClickAction4, false
);

function ButtonClickAction4 (zEvent) {
        var hat4 = 12;
    var zNode4 = document.createElement('p4');
    zNode4.innerHTML = storeEquip(hat4).break;
    document.getElementById ("myContainer4").appendChild (zNode4);

}

document.getElementById ("myButton5").addEventListener (
    "click", ButtonClickAction5, false
);

function ButtonClickAction5 (zEvent) {
        var hat5 = 11;
    var zNode5 = document.createElement('p5');
    zNode5.innerHTML = storeEquip(hat5).break;
    document.getElementById ("myContainer5").appendChild (zNode5);

}

document.getElementById ("myButton6").addEventListener (
    "click", ButtonClickAction6, false
);

function ButtonClickAction6 (zEvent) {
        var hat6 = 53;
    var zNode6 = document.createElement('p6');
    zNode6.innerHTML = storeEquip(hat6).break;
    document.getElementById ("myContainer6").appendChild (zNode6);

}

document.getElementById ("myButton7").addEventListener (
    "click", ButtonClickAction7, false
);

function ButtonClickAction7 (zEvent) {
        var hat7 = 20;
    var zNode7 = document.createElement('p7');
    zNode7.innerHTML = storeEquip(hat7).break;
    document.getElementById ("myContainer7").appendChild (zNode7);

}

document.getElementById ("myButton8").addEventListener (
    "click", ButtonClickAction8, false
);

function ButtonClickAction8 (zEvent) {
        var hat8 = 40;
    var zNode8 = document.createElement('p8');
    zNode8.innerHTML = storeEquip(hat8).break;
    document.getElementById ("myContainer8").appendChild (zNode8);

}

document.getElementById ("myButton9").addEventListener (
    "click", ButtonClickAction9, false
);

function ButtonClickAction9 (zEvent) {
        var hat9 = 55;
    var zNode9 = document.createElement('p9');
    zNode9.innerHTML = storeEquip(hat9).break;
    document.getElementById ("myContainer9").appendChild (zNode9);

}

document.getElementById ("myButton10").addEventListener (
    "click", ButtonClickAction10, false
);

function ButtonClickAction10 (zEvent) {
        var acc10 = 11;
    var zNode10 = document.createElement('p10');
    zNode10.innerHTML = acc(acc10).break;
    document.getElementById ("myContainer10").appendChild (zNode10);

}
document.getElementById("MinecraftBetterMiniCraft").checked = true;
document.getElementById("WWW").checked = true;
document.getElementById("cbp1").checked = true;
